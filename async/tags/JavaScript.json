{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28,"_total":28,"_totalPage":3,"_page":1,"posts":[{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"ES6","permalink":"http://lingyu.life/tags/ES6/","url":"/async/tags/ES6.json","count":2},{"name":"Generator","permalink":"http://lingyu.life/tags/Generator/","url":"/async/tags/Generator.json","count":1}],"categories":[{"name":"NodeJs","permalink":"http://lingyu.life/categories/NodeJs/","url":"/async/categories/NodeJs.json","count":3}],"url":"/async/posts/2014/07/29/generator.json","date":1406563200000,"path":{"year":2014,"month":7,"day":29,"name":"generator"},"subtitle":"剖析Generator的本质","title":"细说Generator","permalink":"http://lingyu.life/2014/07/29/generator/","content":"<p>好久没写东西了，今天看了下ES6的Generator的相关知识，在这里记录一下。主要内容翻译自规范，并加入了自己的理解和总结</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"Gulp","permalink":"http://lingyu.life/tags/Gulp/","url":"/async/tags/Gulp.json","count":2}],"categories":[{"name":"翻译","permalink":"http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/","url":"/async/categories/翻译.json","count":10}],"url":"/async/posts/2014/10/06/gulp-vision-history-future.json","date":1412524800000,"path":{"year":2014,"month":10,"day":6,"name":"gulp-vision-history-future"},"subtitle":"The vision, history, and future of the project","title":"Gulp -- 项目的愿景、过去和将来","permalink":"http://lingyu.life/2014/10/06/gulp-vision-history-future/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@contrahacks/gulp-3828e8126466\" target=\"_blank\" rel=\"noopener\">gulp – The vision, history, and future of the project</a></strong></p>\n<p>gulp是一个将vinyl、vinyl-fs、orchestrator、命令行工具以及一系列用于帮助开发者构建优秀插件的指导方针等集于一身的小巧构建工具。尽管它功能很少，但它却完全打破了构建工具生态体系，并通过许多优秀的项目掀起了一股改革你的工作流程的浪潮。</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"jQuery","permalink":"http://lingyu.life/tags/jQuery/","url":"/async/tags/jQuery.json","count":1}],"categories":[{"name":"JS技术","permalink":"http://lingyu.life/categories/JS%E6%8A%80%E6%9C%AF/","url":"/async/categories/JS技术.json","count":12}],"url":"/async/posts/2014/01/28/jquery-resize.json","date":1390838400000,"path":{"year":2014,"month":1,"day":28,"name":"jquery-resize"},"subtitle":"使用jQuery实现","title":"使用jQuery监听DOM元素大小变化","permalink":"http://lingyu.life/2014/01/28/jquery-resize/","content":"<p>今天写页面的时候突然有这么个需求，由于父元素（一个DIV）的height是由javascript计算出来的固定的值，而在其中增加了一个多说插件，在用户评论后，子元素（DIV）的height属性增加，导致子元素溢出。但是又不知道如何为多说的评论按钮增加回调函数，于是乎就想到了根据子元素的大小变化来重新计算父元素的height。</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28}],"categories":[{"name":"JS技术","permalink":"http://lingyu.life/categories/JS%E6%8A%80%E6%9C%AF/","url":"/async/categories/JS技术.json","count":12}],"url":"/async/posts/2014/05/03/javascript-mvc.json","date":1399046400000,"path":{"year":2014,"month":5,"day":3,"name":"javascript-mvc"},"subtitle":"简要介绍MVC、MVP和MVVM架构模式之间的异同","title":"JavaScript的MV*模式","permalink":"http://lingyu.life/2014/05/03/javascript-mvc/","content":"<p>虽然在做J2EE的时候就已经对MVC有一定的了解，但平常经常听到的MVVM和MVP模式却完全无法理解是什么意思，《JavaScript设计模式》一书中对MVC、MVP、MVVM做了一个详尽的解释，这里记录了一下上面的知识并做了一个简述，正好在学Angular，这些知识结合Angular一起也更加清晰具体了</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"Canvas","permalink":"http://lingyu.life/tags/Canvas/","url":"/async/tags/Canvas.json","count":2},{"name":"动画","permalink":"http://lingyu.life/tags/%E5%8A%A8%E7%94%BB/","url":"/async/tags/动画.json","count":2},{"name":"游戏","permalink":"http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/","url":"/async/tags/游戏.json","count":2}],"categories":[{"name":"游戏开发","permalink":"http://lingyu.life/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/","url":"/async/categories/游戏开发.json","count":1}],"url":"/async/posts/2015/04/18/learn-canvas-1.json","date":1429286400000,"path":{"year":2015,"month":4,"day":18,"name":"learn-canvas-1"},"subtitle":"Canvas动画学习系列","title":"前端动画对比","permalink":"http://lingyu.life/2015/04/18/learn-canvas-1/","content":"<p>将近三个月没写文章了，就在这三个月内，我从一只学生狗变成了上班族。现在一切都稳定下来了，决定重新开始写点东西了。以后的计划是每周一篇，努力坚持~</p>\n<p>之前玩了很长时间的Canvas动画，也写了一些工具和一些demo，放在了我Github上的<a href=\"https://github.com/LingyuCoder/learn-canvas\" target=\"_blank\" rel=\"noopener\">learn-canvas</a>仓库里。在学习Canvas动画的过程中学到了不少宝贵的新知识，这篇主要是个人对于Canvas动画的一些想法以及与其他前端动画实现的一些对比。</p>"},{"tags":[{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"Canvas","permalink":"http://lingyu.life/tags/Canvas/","url":"/async/tags/Canvas.json","count":2},{"name":"游戏","permalink":"http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/","url":"/async/tags/游戏.json","count":2},{"name":"算法","permalink":"http://lingyu.life/tags/%E7%AE%97%E6%B3%95/","url":"/async/tags/算法.json","count":1}],"categories":[{"name":"即时通信","permalink":"http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/","url":"/async/categories/即时通信.json","count":6}],"url":"/async/posts/2014/11/18/peertc-and-fivechess.json","date":1416240000000,"path":{"year":2014,"month":11,"day":18,"name":"peertc-and-fivechess"},"subtitle":"使用Peertc实现双人对战五子棋","title":"Peertc和五子棋","permalink":"http://lingyu.life/2014/11/18/peertc-and-fivechess/","content":"<p>今天发现博客的分类错乱了。自己写的主题对一篇文章有多个分类的情况处理效果不好，所以就把文章的分类重新弄了一下。然后看了看归档发现这个月还没写过东西，于是乎决定写这么一篇文章介绍一下Peertc，以及使用它实现一个对战的五子棋。下载地址：<a href=\"https://github.com/LingyuCoder/peertc\" target=\"_blank\" rel=\"noopener\">Peertc</a>、<a href=\"https://github.com/LingyuCoder/FiveChess\" target=\"_blank\" rel=\"noopener\">五子棋</a></p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.life/tags/CSS/","url":"/async/tags/CSS.json","count":22},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"HTML","permalink":"http://lingyu.life/tags/HTML/","url":"/async/tags/HTML.json","count":17}],"categories":[{"name":"性能优化","permalink":"http://lingyu.life/categories/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/","url":"/async/categories/性能优化.json","count":5}],"url":"/async/posts/2014/03/25/performance-1.json","date":1395676800000,"path":{"year":2014,"month":3,"day":25,"name":"performance-1"},"subtitle":"前端性能优化系列","title":"前端性能优化（DOM操作篇）","permalink":"http://lingyu.life/2014/03/25/performance-1/","content":"<p>最近准备笔试面试题的时候看到很多关于前端性能优化的问题，所以提前调研做做准备，加上我之前写的两篇博客，组成一个新系列</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.life/tags/CSS/","url":"/async/tags/CSS.json","count":22},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"HTML","permalink":"http://lingyu.life/tags/HTML/","url":"/async/tags/HTML.json","count":17},{"name":"响应式","permalink":"http://lingyu.life/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/","url":"/async/tags/响应式.json","count":3}],"categories":[{"name":"响应式","permalink":"http://lingyu.life/categories/%E5%93%8D%E5%BA%94%E5%BC%8F/","url":"/async/categories/响应式.json","count":3}],"url":"/async/posts/2014/02/14/responsive-web-design.json","date":1392307200000,"path":{"year":2014,"month":2,"day":14,"name":"responsive-web-design"},"subtitle":"读《响应式Web设计-HTML5和CSS3实践》有感（响应式网页设计部分）","title":"聊聊响应式网页设计","permalink":"http://lingyu.life/2014/02/14/responsive-web-design/","content":"<p>总是在各个地方看到响应式Web设计。一直对其很感兴趣，也只是零零散散的接触，但并没有系统的去学习响应式。这两天读了Ben Frain著（王永强 译）的《响应式Web设计-HTML5和CSS3实践》，收获颇多，在这里记录一下</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"React","permalink":"http://lingyu.life/tags/React/","url":"/async/tags/React.json","count":2}],"categories":[{"name":"前端综合","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E7%BB%BC%E5%90%88/","url":"/async/categories/前端综合.json","count":6}],"url":"/async/posts/2015/08/30/chonggou.json","date":1440864000000,"path":{"year":2015,"month":8,"day":30,"name":"chonggou"},"subtitle":"扫灰","title":"用React做重构时的一些思考","permalink":"http://lingyu.life/2015/08/30/chonggou/","content":"<p>好久没写东西了，主要是工作比以前学生时代忙多了，周末也是各种加班充电，沉淀的少了。最近一直在用React对手上的老业务做重构，这里写一下重构中的一些感悟和思考</p>"},{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":5},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"DataChannel","permalink":"http://lingyu.life/tags/DataChannel/","url":"/async/tags/DataChannel.json","count":1}],"categories":[{"name":"即时通信","permalink":"http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/","url":"/async/categories/即时通信.json","count":6}],"url":"/async/posts/2014/10/21/datachannel.json","date":1413820800000,"path":{"year":2014,"month":10,"day":21,"name":"datachannel"},"subtitle":"老刘和老姚的故事","title":"使用WebRTC DataChannel在浏览器间传递数据","permalink":"http://lingyu.life/2014/10/21/datachannel/","content":"<p>WebRTC给我们带来了浏览器中的视频、音频聊天体验。但个人认为，它最实用的特性莫过于DataChannel——在浏览器之间建立一个点对点的数据通道。在DataChannel之前，浏览器到浏览器的数据传递通常是这样一个流程：浏览器1发送数据给服务器，服务器处理，服务器再转发给浏览器2。这三个过程都会带来相应的消耗，占用服务器带宽不说，还减缓了消息从发送到接收的时间。其实最理想的方式就是浏览器1直接与浏览2进行通信，服务器不需要参与其中。WebRTC DataChannel就提供了这样一种方式。</p>"}]}