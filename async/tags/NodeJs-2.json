{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14,"_total":14,"_totalPage":2,"_page":2,"posts":[{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":8},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":32}],"categories":[{"name":"即时通信","permalink":"http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2014/05/22/webrtc-data-channels.json","date":1400688000000,"path":{"year":2014,"month":5,"day":22,"name":"webrtc-data-channels"},"subtitle":"使用WebRTC的数据通道实现高效的数据传输","title":"WebRTC的RTCDataChannel","permalink":"http://lingyu.life/2014/05/22/webrtc-data-channels/","content":"<p>在两个浏览器中，为聊天、游戏、或是文件传输等需求发送信息是十分复杂的。通常情况下，我们需要建立一台服务器来转发数据，当然规模比较大的情况下，会扩展成多个数据中心。这种情况下很容易出现很高的延迟，同时难以保证数据的私密性。</p>\n<p>这些问题可以通过WebRTC提供的RTCDataChannel API来解决，他能直接在点对点之间传输数据。这篇文章将介绍如何创建并使用数据通道，并提供了一些网络上常见的用例</p>"},{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"xmpp","permalink":"http://lingyu.life/tags/xmpp/","url":"/async/tags/xmpp.json","count":1}],"categories":[{"name":"即时通信","permalink":"http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2013/12/08/websocket.json","date":1386432000000,"path":{"year":2013,"month":12,"day":8,"name":"websocket"},"subtitle":"使用WebSocket+NodeJs搭建聊天室","title":"搭建HTML5简易聊天室","permalink":"http://lingyu.life/2013/12/08/websocket/","content":"<p>###前面的话###</p>\n<hr>\n<p>之前曾经写过一个符合xmpp协议的Web IM，但使用的是JSJaC，后台用的也是与之配套的jabber client，发现nodejs的事件模式更适合作为Web IM的客户端。</p>\n<p>而传统的ajax轮询机制也早晚被全双工websocket所取代，所以就打算在我的毕业设计的Web IM平台中使用websocket。</p>\n<p>在这里调研一下并作出了一个简单的版聊demo，这里讲一下这个简单demo的实现方式</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":32}],"categories":[{"name":"JS技术","permalink":"http://lingyu.life/categories/JS%E6%8A%80%E6%9C%AF/","url":"/async/categories/JS技术.json","count":13}],"url":"/async/posts/2014/03/19/v8-gc.json","date":1395158400000,"path":{"year":2014,"month":3,"day":19,"name":"v8-gc"},"subtitle":"介绍了V8引擎的垃圾回收器所使用的算法以及进行的优化","title":"浅谈V8引擎中的垃圾回收机制","permalink":"http://lingyu.life/2014/03/19/v8-gc/","content":"<p>这篇文章的所有内容均来自 朴灵的《深入浅出Node.js》及<a href=\"http://www.jayconrod.com/posts/55/a-tour-of-v8-garbage-collection\" target=\"_blank\" rel=\"noopener\">A tour of V8:Garbage Collection</a>，后者还有中文翻译版<a href=\"http://newhtml.net/v8-garbage-collection/\" target=\"_blank\" rel=\"noopener\">V8 之旅： 垃圾回收器</a>，我在这里只是做了个记录和结合</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14}],"categories":[{"name":"翻译","permalink":"http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/","url":"/async/categories/翻译.json","count":11}],"url":"/async/posts/2014/11/24/risingstack-nodejs-style-guide.json","date":1416758400000,"path":{"year":2014,"month":11,"day":24,"name":"risingstack-nodejs-style-guide"},"subtitle":"A mostly reasonable approach to JavaScript - how we write Node.js at RisingStack","title":"RisingStack的Node.js风格指南","permalink":"http://lingyu.life/2014/11/24/risingstack-nodejs-style-guide/","content":"<p>本文翻译自<a href=\"https://github.com/RisingStack/node-style-guide\" target=\"_blank\" rel=\"noopener\">RisingStack/node-style-guide</a></p>"}]}