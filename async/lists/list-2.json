{"_total":67,"_totalPage":7,"_page":2,"posts":[{"tags":[{"name":"自动化测试","permalink":"http://lingyu.life/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/","url":"/async/tags/自动化测试.json","count":1},{"name":"工具","permalink":"http://lingyu.life/tags/%E5%B7%A5%E5%85%B7/","url":"/async/tags/工具.json","count":3}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":8}],"url":"/async/posts/2016/03/07/new/autotest.json","date":1457280000000,"path":{"year":2016,"month":3,"day":7,"name":"new/autotest"},"subtitle":null,"title":"聊一聊前端自动化测试","permalink":"http://lingyu.life/2016/03/07/new/autotest/","content":"<p>以前不喜欢写测试，主要是觉得编写和维护测试用例非常的浪费时间。在真正写了一段时间的基础组件和基础工具后，才发现自动化测试有很多好处。测试最重要的自然是提升代码质量。代码有测试用例，虽不能说百分百无bug，但至少说明测试用例覆盖到的场景是没有问题的。有测试用例，发布前跑一下，可以杜绝各种疏忽而引起的功能bug。</p>"},{"tags":[{"name":"前端架构","permalink":"http://lingyu.life/tags/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84/","url":"/async/tags/前端架构.json","count":3}],"categories":[{"name":"杂谈","permalink":"http://lingyu.life/categories/%E6%9D%82%E8%B0%88/","url":"/async/categories/杂谈.json","count":9}],"url":"/async/posts/2015/08/30/old/chonggou.json","date":1440864000000,"path":{"year":2015,"month":8,"day":30,"name":"old/chonggou"},"subtitle":"扫灰","title":"用React做重构时的一些思考","permalink":"http://lingyu.life/2015/08/30/old/chonggou/","content":"<p>好久没写东西了，主要是工作比以前学生时代忙多了，周末也是各种加班充电，沉淀的少了。最近一直在用React对手上的老业务做重构，这里写一下重构中的一些感悟和思考</p>"},{"tags":[{"name":"React","permalink":"http://lingyu.life/tags/React/","url":"/async/tags/React.json","count":1}],"categories":[{"name":"页面框架","permalink":"http://lingyu.life/categories/%E9%A1%B5%E9%9D%A2%E6%A1%86%E6%9E%B6/","url":"/async/categories/页面框架.json","count":7}],"url":"/async/posts/2015/05/15/old/react-and-webpack.json","date":1431619200000,"path":{"year":2015,"month":5,"day":15,"name":"old/react-and-webpack"},"subtitle":"新手玩转React+Webpack","title":"轻松入门React和Webpack","permalink":"http://lingyu.life/2015/05/15/old/react-and-webpack/","content":"<p>最近在学习React.js，之前都是直接用最原生的方式去写React代码，发现组织起来特别麻烦，之前听人说用Webpack组织React组件得心应手，就花了点时间学习了一下，收获颇丰</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Canvas","permalink":"http://lingyu.life/tags/Canvas/","url":"/async/tags/Canvas.json","count":2},{"name":"动画","permalink":"http://lingyu.life/tags/%E5%8A%A8%E7%94%BB/","url":"/async/tags/动画.json","count":2},{"name":"游戏","permalink":"http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/","url":"/async/tags/游戏.json","count":3}],"categories":[{"name":"互动动画","permalink":"http://lingyu.life/categories/%E4%BA%92%E5%8A%A8%E5%8A%A8%E7%94%BB/","url":"/async/categories/互动动画.json","count":2}],"url":"/async/posts/2015/04/18/old/learn-canvas-1.json","date":1429286400000,"path":{"year":2015,"month":4,"day":18,"name":"old/learn-canvas-1"},"subtitle":"Canvas动画学习系列","title":"前端动画对比","permalink":"http://lingyu.life/2015/04/18/old/learn-canvas-1/","content":"<p>将近三个月没写文章了，就在这三个月内，我从一只学生狗变成了上班族。现在一切都稳定下来了，决定重新开始写点东西了。以后的计划是每周一篇，努力坚持~</p>\n<p>之前玩了很长时间的Canvas动画，也写了一些工具和一些demo，放在了我Github上的<a href=\"https://github.com/LingyuCoder/learn-canvas\" target=\"_blank\" rel=\"noopener\">learn-canvas</a>仓库里。在学习Canvas动画的过程中学到了不少宝贵的新知识，这篇主要是个人对于Canvas动画的一些想法以及与其他前端动画实现的一些对比。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11}],"categories":[{"name":"服务端技术","permalink":"http://lingyu.life/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF/","url":"/async/categories/服务端技术.json","count":2}],"url":"/async/posts/2014/11/24/old/risingstack-nodejs-style-guide.json","date":1416758400000,"path":{"year":2014,"month":11,"day":24,"name":"old/risingstack-nodejs-style-guide"},"subtitle":"A mostly reasonable approach to JavaScript - how we write Node.js at RisingStack","title":"RisingStack的Node.js风格指南","permalink":"http://lingyu.life/2014/11/24/old/risingstack-nodejs-style-guide/","content":"<p>本文翻译自<a href=\"https://github.com/RisingStack/node-style-guide\" target=\"_blank\" rel=\"noopener\">RisingStack/node-style-guide</a></p>"},{"tags":[{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Canvas","permalink":"http://lingyu.life/tags/Canvas/","url":"/async/tags/Canvas.json","count":2},{"name":"游戏","permalink":"http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/","url":"/async/tags/游戏.json","count":3},{"name":"算法","permalink":"http://lingyu.life/tags/%E7%AE%97%E6%B3%95/","url":"/async/tags/算法.json","count":1}],"categories":[{"name":"技术探索","permalink":"http://lingyu.life/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/","url":"/async/categories/技术探索.json","count":6}],"url":"/async/posts/2014/11/18/old/peertc-and-fivechess.json","date":1416240000000,"path":{"year":2014,"month":11,"day":18,"name":"old/peertc-and-fivechess"},"subtitle":"使用Peertc实现双人对战五子棋","title":"Peertc和五子棋","permalink":"http://lingyu.life/2014/11/18/old/peertc-and-fivechess/","content":"<p>今天发现博客的分类错乱了。自己写的主题对一篇文章有多个分类的情况处理效果不好，所以就把文章的分类重新弄了一下。然后看了看归档发现这个月还没写过东西，于是乎决定写这么一篇文章介绍一下Peertc，以及使用它实现一个对战的五子棋。下载地址：<a href=\"https://github.com/LingyuCoder/peertc\" target=\"_blank\" rel=\"noopener\">Peertc</a>、<a href=\"https://github.com/LingyuCoder/FiveChess\" target=\"_blank\" rel=\"noopener\">五子棋</a></p>"},{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":5},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"DataChannel","permalink":"http://lingyu.life/tags/DataChannel/","url":"/async/tags/DataChannel.json","count":1}],"categories":[{"name":"技术探索","permalink":"http://lingyu.life/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/","url":"/async/categories/技术探索.json","count":6}],"url":"/async/posts/2014/10/21/old/datachannel.json","date":1413820800000,"path":{"year":2014,"month":10,"day":21,"name":"old/datachannel"},"subtitle":"老刘和老姚的故事","title":"使用WebRTC DataChannel在浏览器间传递数据","permalink":"http://lingyu.life/2014/10/21/old/datachannel/","content":"<p>WebRTC给我们带来了浏览器中的视频、音频聊天体验。但个人认为，它最实用的特性莫过于DataChannel——在浏览器之间建立一个点对点的数据通道。在DataChannel之前，浏览器到浏览器的数据传递通常是这样一个流程：浏览器1发送数据给服务器，服务器处理，服务器再转发给浏览器2。这三个过程都会带来相应的消耗，占用服务器带宽不说，还减缓了消息从发送到接收的时间。其实最理想的方式就是浏览器1直接与浏览2进行通信，服务器不需要参与其中。WebRTC DataChannel就提供了这样一种方式。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Gulp","permalink":"http://lingyu.life/tags/Gulp/","url":"/async/tags/Gulp.json","count":2}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":8}],"url":"/async/posts/2014/10/07/old/getting-gulpy.json","date":1412611200000,"path":{"year":2014,"month":10,"day":7,"name":"old/getting-gulpy"},"subtitle":"Getting gulpy -- Advanced tips for using gulp.js","title":"Gulp思维 —— Gulp高级技巧","permalink":"http://lingyu.life/2014/10/07/old/getting-gulpy/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@webprolific/getting-gulpy-a2010c13d3d5\" target=\"_blank\" rel=\"noopener\">Getting gulpy – Advanced tips for using gulp.js</a></strong></p>\n<p>感受过<a href=\"http://gulpjs.com\" target=\"_blank\" rel=\"noopener\">gulp.js</a>带来的兴奋过后，你需要的不仅仅是它的光鲜，而是切切实实的实例。这篇文章讨论了一些使用gulp.js时常踩的坑，以及一些更加高级和定制化的插件和流的使用技巧。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Gulp","permalink":"http://lingyu.life/tags/Gulp/","url":"/async/tags/Gulp.json","count":2}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":8}],"url":"/async/posts/2014/10/06/old/gulp-vision-history-future.json","date":1412524800000,"path":{"year":2014,"month":10,"day":6,"name":"old/gulp-vision-history-future"},"subtitle":"The vision, history, and future of the project","title":"Gulp -- 项目的愿景、过去和将来","permalink":"http://lingyu.life/2014/10/06/old/gulp-vision-history-future/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@contrahacks/gulp-3828e8126466\" target=\"_blank\" rel=\"noopener\">gulp – The vision, history, and future of the project</a></strong></p>\n<p>gulp是一个将vinyl、vinyl-fs、orchestrator、命令行工具以及一系列用于帮助开发者构建优秀插件的指导方针等集于一身的小巧构建工具。尽管它功能很少，但它却完全打破了构建工具生态体系，并通过许多优秀的项目掀起了一股改革你的工作流程的浪潮。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"ES6","permalink":"http://lingyu.life/tags/ES6/","url":"/async/tags/ES6.json","count":2},{"name":"koa","permalink":"http://lingyu.life/tags/koa/","url":"/async/tags/koa.json","count":1}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":8}],"url":"/async/posts/2014/09/24/old/koa-anywhere.json","date":1411488000000,"path":{"year":2014,"month":9,"day":24,"name":"old/koa-anywhere"},"subtitle":"通过一条命令，将当前目录变成一个静态文件服务器","title":"koa-anywhere","permalink":"http://lingyu.life/2014/09/24/old/koa-anywhere/","content":"<p>最近写了一个快速启动静态文件服务器的NodeJs包<a href=\"https://github.com/LingyuCoder/koa-anywhere\" target=\"_blank\" rel=\"noopener\">koa-anywhere</a>，可以通过一条命令快速的启动静态文件服务器，而且支持多级目录。目前已经发到了NPM上了</p>"}]}