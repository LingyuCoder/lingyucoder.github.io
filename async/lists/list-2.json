{"_total":63,"_totalPage":7,"_page":2,"posts":[{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11}],"categories":[{"name":"服务端技术","permalink":"http://lingyu.life/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF/","url":"/async/categories/服务端技术.json","count":2}],"url":"/async/posts/2014/11/24/old/risingstack-nodejs-style-guide.json","date":1416758400000,"path":{"year":2014,"month":11,"day":24,"name":"old/risingstack-nodejs-style-guide"},"subtitle":"A mostly reasonable approach to JavaScript - how we write Node.js at RisingStack","title":"RisingStack的Node.js风格指南","permalink":"http://lingyu.life/2014/11/24/old/risingstack-nodejs-style-guide/","content":"<p>本文翻译自<a href=\"https://github.com/RisingStack/node-style-guide\" target=\"_blank\" rel=\"noopener\">RisingStack/node-style-guide</a></p>"},{"tags":[{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Canvas","permalink":"http://lingyu.life/tags/Canvas/","url":"/async/tags/Canvas.json","count":2},{"name":"游戏","permalink":"http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/","url":"/async/tags/游戏.json","count":3},{"name":"算法","permalink":"http://lingyu.life/tags/%E7%AE%97%E6%B3%95/","url":"/async/tags/算法.json","count":1}],"categories":[{"name":"技术探索","permalink":"http://lingyu.life/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/","url":"/async/categories/技术探索.json","count":6}],"url":"/async/posts/2014/11/18/old/peertc-and-fivechess.json","date":1416240000000,"path":{"year":2014,"month":11,"day":18,"name":"old/peertc-and-fivechess"},"subtitle":"使用Peertc实现双人对战五子棋","title":"Peertc和五子棋","permalink":"http://lingyu.life/2014/11/18/old/peertc-and-fivechess/","content":"<p>今天发现博客的分类错乱了。自己写的主题对一篇文章有多个分类的情况处理效果不好，所以就把文章的分类重新弄了一下。然后看了看归档发现这个月还没写过东西，于是乎决定写这么一篇文章介绍一下Peertc，以及使用它实现一个对战的五子棋。下载地址：<a href=\"https://github.com/LingyuCoder/peertc\" target=\"_blank\" rel=\"noopener\">Peertc</a>、<a href=\"https://github.com/LingyuCoder/FiveChess\" target=\"_blank\" rel=\"noopener\">五子棋</a></p>"},{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":5},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"DataChannel","permalink":"http://lingyu.life/tags/DataChannel/","url":"/async/tags/DataChannel.json","count":1}],"categories":[{"name":"技术探索","permalink":"http://lingyu.life/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/","url":"/async/categories/技术探索.json","count":6}],"url":"/async/posts/2014/10/21/old/datachannel.json","date":1413820800000,"path":{"year":2014,"month":10,"day":21,"name":"old/datachannel"},"subtitle":"老刘和老姚的故事","title":"使用WebRTC DataChannel在浏览器间传递数据","permalink":"http://lingyu.life/2014/10/21/old/datachannel/","content":"<p>WebRTC给我们带来了浏览器中的视频、音频聊天体验。但个人认为，它最实用的特性莫过于DataChannel——在浏览器之间建立一个点对点的数据通道。在DataChannel之前，浏览器到浏览器的数据传递通常是这样一个流程：浏览器1发送数据给服务器，服务器处理，服务器再转发给浏览器2。这三个过程都会带来相应的消耗，占用服务器带宽不说，还减缓了消息从发送到接收的时间。其实最理想的方式就是浏览器1直接与浏览2进行通信，服务器不需要参与其中。WebRTC DataChannel就提供了这样一种方式。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Gulp","permalink":"http://lingyu.life/tags/Gulp/","url":"/async/tags/Gulp.json","count":2}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":6}],"url":"/async/posts/2014/10/07/old/getting-gulpy.json","date":1412611200000,"path":{"year":2014,"month":10,"day":7,"name":"old/getting-gulpy"},"subtitle":"Getting gulpy -- Advanced tips for using gulp.js","title":"Gulp思维 —— Gulp高级技巧","permalink":"http://lingyu.life/2014/10/07/old/getting-gulpy/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@webprolific/getting-gulpy-a2010c13d3d5\" target=\"_blank\" rel=\"noopener\">Getting gulpy – Advanced tips for using gulp.js</a></strong></p>\n<p>感受过<a href=\"http://gulpjs.com\" target=\"_blank\" rel=\"noopener\">gulp.js</a>带来的兴奋过后，你需要的不仅仅是它的光鲜，而是切切实实的实例。这篇文章讨论了一些使用gulp.js时常踩的坑，以及一些更加高级和定制化的插件和流的使用技巧。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"Gulp","permalink":"http://lingyu.life/tags/Gulp/","url":"/async/tags/Gulp.json","count":2}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":6}],"url":"/async/posts/2014/10/06/old/gulp-vision-history-future.json","date":1412524800000,"path":{"year":2014,"month":10,"day":6,"name":"old/gulp-vision-history-future"},"subtitle":"The vision, history, and future of the project","title":"Gulp -- 项目的愿景、过去和将来","permalink":"http://lingyu.life/2014/10/06/old/gulp-vision-history-future/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@contrahacks/gulp-3828e8126466\" target=\"_blank\" rel=\"noopener\">gulp – The vision, history, and future of the project</a></strong></p>\n<p>gulp是一个将vinyl、vinyl-fs、orchestrator、命令行工具以及一系列用于帮助开发者构建优秀插件的指导方针等集于一身的小巧构建工具。尽管它功能很少，但它却完全打破了构建工具生态体系，并通过许多优秀的项目掀起了一股改革你的工作流程的浪潮。</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"ES6","permalink":"http://lingyu.life/tags/ES6/","url":"/async/tags/ES6.json","count":2},{"name":"koa","permalink":"http://lingyu.life/tags/koa/","url":"/async/tags/koa.json","count":1}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":6}],"url":"/async/posts/2014/09/24/old/koa-anywhere.json","date":1411488000000,"path":{"year":2014,"month":9,"day":24,"name":"old/koa-anywhere"},"subtitle":"通过一条命令，将当前目录变成一个静态文件服务器","title":"koa-anywhere","permalink":"http://lingyu.life/2014/09/24/old/koa-anywhere/","content":"<p>最近写了一个快速启动静态文件服务器的NodeJs包<a href=\"https://github.com/LingyuCoder/koa-anywhere\" target=\"_blank\" rel=\"noopener\">koa-anywhere</a>，可以通过一条命令快速的启动静态文件服务器，而且支持多级目录。目前已经发到了NPM上了</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.life/tags/CSS/","url":"/async/tags/CSS.json","count":21},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"HTML","permalink":"http://lingyu.life/tags/HTML/","url":"/async/tags/HTML.json","count":17},{"name":"杂谈","permalink":"http://lingyu.life/tags/%E6%9D%82%E8%B0%88/","url":"/async/tags/杂谈.json","count":5}],"categories":[{"name":"杂谈","permalink":"http://lingyu.life/categories/%E6%9D%82%E8%B0%88/","url":"/async/categories/杂谈.json","count":7}],"url":"/async/posts/2014/09/22/old/learn-fe.json","date":1411315200000,"path":{"year":2014,"month":9,"day":22,"name":"old/learn-fe"},"subtitle":"一些总结","title":"学前端的一点总结","permalink":"http://lingyu.life/2014/09/22/old/learn-fe/","content":"<p>最近<a href=\"https://github.com/qiu-deqing\" target=\"_blank\" rel=\"noopener\">Qiu</a>开了一个<a href=\"https://github.com/qiu-deqing/FE-learning/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">FE学习经验介绍</a>，并邀请我去写一点东西。感觉这种方式很有意思，趁着闲下来了，就随便扯了一些，希望能帮到想学前端的同学。我自己只是个前端初学者，希望能有更多的前端爱好者一同学习探讨~~</p>"},{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"ES6","permalink":"http://lingyu.life/tags/ES6/","url":"/async/tags/ES6.json","count":2},{"name":"Generator","permalink":"http://lingyu.life/tags/Generator/","url":"/async/tags/Generator.json","count":1},{"name":"语言特性","permalink":"http://lingyu.life/tags/%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7/","url":"/async/tags/语言特性.json","count":4}],"categories":[{"name":"前端工程化","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","url":"/async/categories/前端工程化.json","count":6}],"url":"/async/posts/2014/07/29/old/generator.json","date":1406563200000,"path":{"year":2014,"month":7,"day":29,"name":"old/generator"},"subtitle":"剖析Generator的本质","title":"细说Generator","permalink":"http://lingyu.life/2014/07/29/old/generator/","content":"<p>好久没写东西了，今天看了下ES6的Generator的相关知识，在这里记录一下。主要内容翻译自规范，并加入了自己的理解和总结</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.life/tags/CSS/","url":"/async/tags/CSS.json","count":21},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26},{"name":"HTML","permalink":"http://lingyu.life/tags/HTML/","url":"/async/tags/HTML.json","count":17},{"name":"动画","permalink":"http://lingyu.life/tags/%E5%8A%A8%E7%94%BB/","url":"/async/tags/动画.json","count":2},{"name":"Kissy","permalink":"http://lingyu.life/tags/Kissy/","url":"/async/tags/Kissy.json","count":1}],"categories":[{"name":"互动动画","permalink":"http://lingyu.life/categories/%E4%BA%92%E5%8A%A8%E5%8A%A8%E7%94%BB/","url":"/async/categories/互动动画.json","count":2}],"url":"/async/posts/2014/05/31/old/kissy-anime-plugin.json","date":1401465600000,"path":{"year":2014,"month":5,"day":31,"name":"old/kissy-anime-plugin"},"subtitle":"一个小作业","title":"如何写一个KISSY动画插件","permalink":"http://lingyu.life/2014/05/31/old/kissy-anime-plugin/","content":"<p>最近写东西写的比较少，并不代表我一直在划水。之前阿里的前辈布置了三个作业，其中一个就是基于KISSY写一个动画插件。事实上，KISSY已经有自己的动画模块，叫做<a href=\"http://docs.kissyui.com/1.4/docs/html/api/anim/index.html\" target=\"_blank\" rel=\"noopener\">anim</a>，这里前辈的意思就是让我再造一个轮子，<a href=\"http://lingyucoder.github.io/kissy-anime-plugin\" target=\"_blank\" rel=\"noopener\">DEMO页面</a>，<a href=\"https://github.com/LingyuCoder/kissy-anime-plugin\" target=\"_blank\" rel=\"noopener\">Github页面</a></p>"},{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":5},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":6},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":5},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":26}],"categories":[{"name":"技术探索","permalink":"http://lingyu.life/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/","url":"/async/categories/技术探索.json","count":6}],"url":"/async/posts/2014/05/22/old/webrtc-data-channels.json","date":1400688000000,"path":{"year":2014,"month":5,"day":22,"name":"old/webrtc-data-channels"},"subtitle":"使用WebRTC的数据通道实现高效的数据传输","title":"WebRTC的RTCDataChannel","permalink":"http://lingyu.life/2014/05/22/old/webrtc-data-channels/","content":"<p>在两个浏览器中，为聊天、游戏、或是文件传输等需求发送信息是十分复杂的。通常情况下，我们需要建立一台服务器来转发数据，当然规模比较大的情况下，会扩展成多个数据中心。这种情况下很容易出现很高的延迟，同时难以保证数据的私密性。</p>\n<p>这些问题可以通过WebRTC提供的RTCDataChannel API来解决，他能直接在点对点之间传输数据。这篇文章将介绍如何创建并使用数据通道，并提供了一些网络上常见的用例</p>"}]}