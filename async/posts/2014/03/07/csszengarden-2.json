{"tags":[{"name":"CSS","permalink":"http://lingyu.life/tags/CSS/","url":"/async/tags/CSS.json","count":30},{"name":"HTML","permalink":"http://lingyu.life/tags/HTML/","url":"/async/tags/HTML.json","count":24},{"name":"设计","permalink":"http://lingyu.life/tags/%E8%AE%BE%E8%AE%A1/","url":"/async/tags/设计.json","count":10}],"categories":[{"name":"读书笔记","permalink":"http://lingyu.life/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","url":"/async/categories/读书笔记.json","count":10}],"url":"/async/posts/2014/03/07/csszengarden-2.json","date":1394121600000,"path":{"year":2014,"month":3,"day":7,"name":"csszengarden-2"},"subtitle":"《CSS禅意花园》读书笔记系列第二篇","title":"《CSS禅意花园》读书笔记——正文布局","permalink":"http://lingyu.life/2014/03/07/csszengarden-2/","content":"<p>最近拜读了网页设计界的名书——《CSS禅意花园》，思考良久，收获颇丰。在这里记录读CSS禅意花园中所归纳出来的重点，方便日后再读、再品</p>\n<a id=\"more\"></a>\n<h2 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h2><h3 id=\"绝对定位\"><a href=\"#绝对定位\" class=\"headerlink\" title=\"绝对定位\"></a>绝对定位</h3><p>元素使用绝对定位时，其将脱离原始文档流，不会对其旁边的元素带来任何影响</p>\n<h3 id=\"浮动\"><a href=\"#浮动\" class=\"headerlink\" title=\"浮动\"></a>浮动</h3><p>浮动布局的优势在于：浮动元素仍保留在文档流中其环绕的元素也都清楚它的位置</p>\n<hr>\n<h2 id=\"布局方法\"><a href=\"#布局方法\" class=\"headerlink\" title=\"布局方法\"></a>布局方法</h2><h3 id=\"固定布局和流式布局\"><a href=\"#固定布局和流式布局\" class=\"headerlink\" title=\"固定布局和流式布局\"></a>固定布局和流式布局</h3><p>固定布局：页面有着固定的宽度，居左、居右对齐，或者居中。页面内容的宽度不会随着浏览器窗口的宽度变化而变化</p>\n<p>流式布局：页面宽度用百分比指定，而不是某个固定的宽度。浏览器窗口大小变化时，页面宽度随之变化</p>\n<p>流式布局设计避免了另一半页面的空白，显得更为平衡。但使用流式布局，无法精确控制行长、页面布局以及元素位置</p>\n<hr>\n<h2 id=\"水平居中方案\"><a href=\"#水平居中方案\" class=\"headerlink\" title=\"水平居中方案\"></a>水平居中方案</h2><h3 id=\"自动margin水平居中\"><a href=\"#自动margin水平居中\" class=\"headerlink\" title=\"自动margin水平居中\"></a>自动margin水平居中</h3><p>使用<code>margin: 0 auto</code>，使用时注意指定宽度，兼容ie6+</p>\n<h3 id=\"使用text-align实现居中\"><a href=\"#使用text-align实现居中\" class=\"headerlink\" title=\"使用text-align实现居中\"></a>使用text-align实现居中</h3><p>在body上设置<code>text-align: center</code>，这是一条hack，整整完全遵守标准的浏览器不会改变容器的位置，所以这条行不通</p>\n<h3 id=\"负margin\"><a href=\"#负margin\" class=\"headerlink\" title=\"负margin\"></a>负margin</h3><p>先将元素通过如下代码右移屏幕宽度的50%：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">left</span>: 50%;</span><br></pre></td></tr></table></figure>\n<p>然后使用负margin左移元素宽度的50%:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">left</span>: 50%;</span><br><span class=\"line\"><span class=\"selector-tag\">width</span>: 1000<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">margin-left</span>: <span class=\"selector-tag\">-500px</span>;</span><br></pre></td></tr></table></figure>\n<p>使用这种方式，需要将内边距、边框计算在容器宽度中</p>\n<hr>\n<h2 id=\"布局的灵感和法则\"><a href=\"#布局的灵感和法则\" class=\"headerlink\" title=\"布局的灵感和法则\"></a>布局的灵感和法则</h2><h3 id=\"用户界面设计\"><a href=\"#用户界面设计\" class=\"headerlink\" title=\"用户界面设计\"></a>用户界面设计</h3><p>用户界面设计更加关注用户，其最主要的研究目的就是让开发者和工程师能够更好的满足用户的需求</p>\n<ul>\n<li>了解浏览额面的用户</li>\n<li>在页面和站点中给用户足够的导向</li>\n<li>使用被人们熟知的象征符号</li>\n<li>保证与功能现骨干的特性在页面中足够显眼</li>\n<li>保证设计元素的一致性</li>\n<li>了解页面中的关键元素</li>\n<li>清楚的表达页面内容：通常来讲人类的注意力持续最多9秒钟，这段时间还是不能了解页面的主要内容，用户就会彻底放弃</li>\n</ul>\n<h3 id=\"可用性\"><a href=\"#可用性\" class=\"headerlink\" title=\"可用性\"></a>可用性</h3><p>可用性研究更加关注最终的用户体验，即用户如何与已经开发完成了的程序进行交互</p>\n<p>可用性原则：</p>\n<ul>\n<li>重要信息应放在显眼的位置</li>\n<li>永远在title中给出页面的简单介绍</li>\n<li>尽可能地保证页面中的导航链接有着一致的表现，同样也要确保有回到首页的链接</li>\n<li>在大中型站点来说，最好提供搜索功能。搜索功能的位置要让用户直觉就能够发现</li>\n<li>用缩进和偏移将栏中内容分开</li>\n</ul>\n<hr>\n<h2 id=\"灵感\"><a href=\"#灵感\" class=\"headerlink\" title=\"灵感\"></a>灵感</h2><p>建议新手去一些地点进行观察。如壮美、多彩、富有活力的大自然常常是灵感的发源地。另外一个灵感的发源地就是人的性格和外贸。人的外形总会在艺术中占有相当的地位。</p>\n<h3 id=\"从印刷作品中找到灵感\"><a href=\"#从印刷作品中找到灵感\" class=\"headerlink\" title=\"从印刷作品中找到灵感\"></a>从印刷作品中找到灵感</h3><h3 id=\"打破纵向布局的常规\"><a href=\"#打破纵向布局的常规\" class=\"headerlink\" title=\"打破纵向布局的常规\"></a>打破纵向布局的常规</h3><p>考虑横向布局，但注意浏览器兼容性和实现</p>\n<hr>\n<h2 id=\"元素的位置以及带来的含义\"><a href=\"#元素的位置以及带来的含义\" class=\"headerlink\" title=\"元素的位置以及带来的含义\"></a>元素的位置以及带来的含义</h2><p>如果将一张纸分为四个象限，西方文字布局的顺序是从左到右，从上至下。浏览者一般都会无意中按照这个顺序来区分四个象限内容的重要性</p>\n<p>所以logo一般放在左上位置</p>\n<p>在页面中，无需滚动即可看到的区域都是最重要的部分，将某个元素至于页面的右上角，意味着该元素的重要性略逊于左上角的元素，但仍然远高于页面其他元素</p>\n<p>底部两个象限并不是那么重要</p>\n<p>页面底部的常见用途就是放置一些非必要的内容，比如没有足够层次性的连接，指向本页或网站其他页面的导航等等。这些内容若是用户没有看到，也没有什么大不了的</p>\n<hr>\n<h2 id=\"网格布局\"><a href=\"#网格布局\" class=\"headerlink\" title=\"网格布局\"></a>网格布局</h2><p>网格不过是一系列相交线分割出的大小一致且极具逻辑性的方框。若在布局中严格依照网格，元素的比例和间距将变得更为协调统一，虽然这可能让作品过于规整、缺乏创造性</p>\n<p>根据需要，可以使用绝对定位（<code>position: absolute</code>）或是相对定位（<code>position: relative</code>）来打破网格的限制</p>\n<hr>\n<h2 id=\"内容溢出\"><a href=\"#内容溢出\" class=\"headerlink\" title=\"内容溢出\"></a>内容溢出</h2><p>大多数浏览器都支持缩放页面的文本字号，很多视力不佳的人很依赖这个功能。字号会进行放大（150%甚至更大），字号放大后可能会导致文本重叠问题，尤其是类似导航链接之类的小块文字区域容易受影响</p>\n<p>最常见的两种内容溢出情况：</p>\n<ol>\n<li>绝对定位元素中内容过多</li>\n<li>浮动元素尺寸超过其可容纳区域</li>\n</ol>\n<h3 id=\"浮动导致的内容溢出\"><a href=\"#浮动导致的内容溢出\" class=\"headerlink\" title=\"浮动导致的内容溢出\"></a>浮动导致的内容溢出</h3><p>CSS引入浮动的本意是让文本能够环绕在其中内嵌的其他元素周围，而不是为了页面布局</p>\n<p>浮动后可以使用清除浮动的的方式来让某一元素不再跟随在另一元素后面。清除浮动的方式有很多，这里就不一一列举了</p>\n<h3 id=\"绝对定位导致的内容已出\"><a href=\"#绝对定位导致的内容已出\" class=\"headerlink\" title=\"绝对定位导致的内容已出\"></a>绝对定位导致的内容已出</h3><p>绝对定位中遇到的最多的问题就是垂直方向溢出。绝对定位元素不像浮动元素那样能够被“清除”</p>\n<p>避免方法：</p>\n<ul>\n<li>使用浮动替代绝对布局</li>\n<li>在设计中尝试避免</li>\n<li>通过<code>overflow: auto</code>或者<code>overflow: scroll</code>来让内容超出时出现滚动条</li>\n<li>使用JavaScript脚本辅助</li>\n<li>使用em作为长度单位而不是px（仅适用于增大字号导致的内容溢出）</li>\n</ul>\n"}