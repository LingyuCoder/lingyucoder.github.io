{"tags":[{"name":"WebSocket","permalink":"http://lingyu.life/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8},{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.life/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"WebRTC","permalink":"http://lingyu.life/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":8},{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":32}],"categories":[{"name":"即时通信","permalink":"http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2014/03/17/old/SkyRTC-doc.json","date":1394985600000,"path":{"year":2014,"month":3,"day":17,"name":"old/SkyRTC-doc"},"subtitle":"使用SkyRTC搭建视频、音频聊天室","title":"开源WebRTC库——SkyRTC文档（服务器部分）","permalink":"http://lingyu.life/2014/03/17/old/SkyRTC-doc/","content":"<p>忙了几天终于把SkyRTC库上传到NPM上了，并写了一份详细的使用文档，标明了基本的使用方法和类，修正了几个小bug，更多的bug还需要更多的测试，把文档发一下，具体项目见<a href=\"https://github.com/LingyuCoder/SkyRTC\" target=\"_blank\" rel=\"noopener\">我在Github上的SkyRTC项目</a></p>\n<a id=\"more\"></a>\n\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>一个Node.js编写的WebRTC服务器端库，为服务器端库，需要配合客户端库<a href=\"https://github.com/LingyuCoder/SkyRTC-client\" target=\"_blank\" rel=\"noopener\">SkyRTC-client</a>共同使用，用于搭建基于WebRTC和WebSocket技术的在线音频、视频聊天室</p>\n<h2 id=\"SkyRTC前端库SkyRTC-client\"><a href=\"#SkyRTC前端库SkyRTC-client\" class=\"headerlink\" title=\"SkyRTC前端库SkyRTC-client\"></a>SkyRTC前端库SkyRTC-client</h2><p><a href=\"https://github.com/LingyuCoder/SkyRTC-client\" target=\"_blank\" rel=\"noopener\">SkyRTC-client</a></p>\n<h2 id=\"简单示例\"><a href=\"#简单示例\" class=\"headerlink\" title=\"简单示例\"></a>简单示例</h2><h3 id=\"NPM安装\"><a href=\"#NPM安装\" class=\"headerlink\" title=\"NPM安装\"></a>NPM安装</h3><p>执行如下命令从npm进行安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install skyrtc</span><br></pre></td></tr></table></figure>\n<h3 id=\"监听服务器\"><a href=\"#监听服务器\" class=\"headerlink\" title=\"监听服务器\"></a>监听服务器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> app = express();</span><br><span class=\"line\"><span class=\"keyword\">var</span> server = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>).createServer(app);</span><br><span class=\"line\"><span class=\"keyword\">var</span> SkyRTC = <span class=\"built_in\">require</span>(<span class=\"string\">'skyrtc'</span>).listen(server);</span><br><span class=\"line\"><span class=\"keyword\">var</span> port = process.env.PORT || <span class=\"number\">3000</span>;</span><br><span class=\"line\">server.listen(port);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监听WebRTC事件\"><a href=\"#监听WebRTC事件\" class=\"headerlink\" title=\"监听WebRTC事件\"></a>监听WebRTC事件</h3><p>SkyRTC继承自EventEmitter, 可以通过如下语法监听事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SkyRTC.rtc.on(<span class=\"string\">'eventName'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内置事件\"><a href=\"#内置事件\" class=\"headerlink\" title=\"内置事件\"></a>内置事件</h2><ul>\n<li>new_connect</li>\n<li>new_peer</li>\n<li>remove_peer</li>\n<li>socket_message</li>\n<li>ice_candidate</li>\n<li>offer</li>\n<li>answer</li>\n</ul>\n<h3 id=\"new-connect\"><a href=\"#new-connect\" class=\"headerlink\" title=\"new_connect\"></a>new_connect</h3><p>新用户与服务器建立WebSocket连接时触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——新建立的WebSocket连接实例</li>\n</ul>\n<h3 id=\"new-peer\"><a href=\"#new-peer\" class=\"headerlink\" title=\"new_peer\"></a>new_peer</h3><p>用户加入房间后触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——用户使用的WebSocket连接实例</li>\n<li>room——房间名称</li>\n</ul>\n<h3 id=\"remove-peer\"><a href=\"#remove-peer\" class=\"headerlink\" title=\"remove_peer\"></a>remove_peer</h3><p>用户关闭连接后触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——用户使用的WebSocket连接实例</li>\n</ul>\n<h3 id=\"socket-message\"><a href=\"#socket-message\" class=\"headerlink\" title=\"socket_message\"></a>socket_message</h3><p>客户端向服务器端发送消息，且非自定义事件格式时触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——用户使用的WebSocket连接实例</li>\n<li>msg——发送的消息内容</li>\n</ul>\n<h3 id=\"ice-candidate\"><a href=\"#ice-candidate\" class=\"headerlink\" title=\"ice_candidate\"></a>ice_candidate</h3><p>接收到ice candidate信令时触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——用户使用的WebSocket连接实例</li>\n<li>candidate——ice candidate信令数据</li>\n</ul>\n<h3 id=\"offer\"><a href=\"#offer\" class=\"headerlink\" title=\"offer\"></a>offer</h3><p>接收到offer信令时触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——用户使用的WebSocket连接实例</li>\n<li>offer——offer信令数据</li>\n</ul>\n<h3 id=\"answer\"><a href=\"#answer\" class=\"headerlink\" title=\"answer\"></a>answer</h3><p>接收到answer信令时触发</p>\n<p>参数：</p>\n<ul>\n<li>socket——用户使用的WebSocket连接实例</li>\n<li>answer——answer信令数据</li>\n</ul>\n<h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><ul>\n<li>getRooms</li>\n<li>broadcastInRoom</li>\n<li>broadcast</li>\n<li>getSocket</li>\n<li>on</li>\n</ul>\n<h3 id=\"getRooms\"><a href=\"#getRooms\" class=\"headerlink\" title=\"getRooms\"></a>getRooms</h3><p>用户获取当前服务器上所有房间信息</p>\n<p>参数：</p>\n<p>无</p>\n<p>返回值：</p>\n<ul>\n<li>rooms——所有房间名称的数组</li>\n</ul>\n<h3 id=\"getSocket\"><a href=\"#getSocket\" class=\"headerlink\" title=\"getSocket\"></a>getSocket</h3><p>通过socket的id获得socket实例</p>\n<p>参数：</p>\n<ul>\n<li>id——socket的id</li>\n</ul>\n<p>返回值：</p>\n<ul>\n<li>socket——WebSocket实例</li>\n</ul>\n<h3 id=\"broadcastInRoom\"><a href=\"#broadcastInRoom\" class=\"headerlink\" title=\"broadcastInRoom\"></a>broadcastInRoom</h3><p>在房间中广播消息</p>\n<p>参数：</p>\n<ul>\n<li>room——被广播消息的房间名称</li>\n<li>data——消息的具体内容</li>\n<li>errorCb——广播失败时的回调函数</li>\n</ul>\n<p>返回值：</p>\n<p>无</p>\n<h3 id=\"broadcast\"><a href=\"#broadcast\" class=\"headerlink\" title=\"broadcast\"></a>broadcast</h3><p>向服务器上的所有用户广播消息</p>\n<p>参数：</p>\n<ul>\n<li>data——消息的具体内容</li>\n<li>errorCb——广播失败时的回调函数</li>\n</ul>\n<p>返回值：</p>\n<p>无</p>\n<h3 id=\"on\"><a href=\"#on\" class=\"headerlink\" title=\"on\"></a>on</h3><p>向服务器上的事件绑定处理器</p>\n<p>参数：</p>\n<ul>\n<li>eventName——被绑定的事件名称</li>\n<li>callback——被绑定的事件触发时的回调函数</li>\n</ul>\n<p>返回值：</p>\n<p>无</p>\n<h2 id=\"自定义事件\"><a href=\"#自定义事件\" class=\"headerlink\" title=\"自定义事件\"></a>自定义事件</h2><p>在SkyRTC中可以自定义事件，在前端页面使用WebSocket发送信息时，以如下JSON格式发送信息：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"eventName\"</span>: <span class=\"string\">\"yourOwnEventName\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"data\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">//自定义事件数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在后台通过监听同名事件来进行处理：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SkyRTC.rtc.on(<span class=\"string\">\"yourOwnEventName\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//data将是前台所传输的数据</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>自定义事件请不要与上述SkyRTC原生事件重名</p>\n<h2 id=\"项目完整实例\"><a href=\"#项目完整实例\" class=\"headerlink\" title=\"项目完整实例\"></a>项目完整实例</h2><p><a href=\"https://github.com/LingyuCoder/SkyRTC-demo\" target=\"_blank\" rel=\"noopener\">SkyRTC-demo</a></p>\n"}