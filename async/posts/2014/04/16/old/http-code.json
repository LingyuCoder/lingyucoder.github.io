{"tags":[{"name":"HTTP","permalink":"http://lingyu.life/tags/HTTP/","url":"/async/tags/HTTP.json","count":2}],"categories":[{"name":"WEB基础","permalink":"http://lingyu.life/categories/WEB%E5%9F%BA%E7%A1%80/","url":"/async/categories/WEB基础.json","count":2}],"url":"/async/posts/2014/04/16/old/http-code.json","date":1397577600000,"path":{"year":2014,"month":4,"day":16,"name":"old/http-code"},"subtitle":"100,200,301,304,401,404,500等等都是什么？","title":"HTTP协议状态码备忘","permalink":"http://lingyu.life/2014/04/16/old/http-code/","content":"<p>之前看某些大公司的笔试题和面试题里经常会问HTTP状态码是什么意思，于是特别去查《HTTP权威指南》做了一个备忘。但之后忙于找实习的准备却完全忘了这回事，总是纠结于一些JavaScript和CSS的内容。今天同学面试被重新问到，于是翻出来重新看了看，希望以后自己面试的时候能答上来</p>\n<a id=\"more\"></a>\n\n<h3 id=\"100-199——信息性状态码\"><a href=\"#100-199——信息性状态码\" class=\"headerlink\" title=\"100~199——信息性状态码\"></a>100~199——信息性状态码</h3><h4 id=\"100——continue（继续）\"><a href=\"#100——continue（继续）\" class=\"headerlink\" title=\"100——continue（继续）\"></a>100——continue（继续）</h4><p>说明收到了请求的初始部分，请客户端继续。</p>\n<h4 id=\"101——switching-protocols（协议更换）\"><a href=\"#101——switching-protocols（协议更换）\" class=\"headerlink\" title=\"101——switching protocols（协议更换）\"></a>101——switching protocols（协议更换）</h4><p>说明服务器正在根据客户端的指定，将协议切换成update首部所列的协议</p>\n<hr>\n<h3 id=\"200-299——成功状态码\"><a href=\"#200-299——成功状态码\" class=\"headerlink\" title=\"200~299——成功状态码\"></a>200~299——成功状态码</h3><h4 id=\"200——OK（请求成功）\"><a href=\"#200——OK（请求成功）\" class=\"headerlink\" title=\"200——OK（请求成功）\"></a>200——OK（请求成功）</h4><p>请求没问题，实体的主体部分包括了所请求的资源</p>\n<h4 id=\"201——Created（对象已创建）\"><a href=\"#201——Created（对象已创建）\" class=\"headerlink\" title=\"201——Created（对象已创建）\"></a>201——Created（对象已创建）</h4><p>用于创建服务器对象的请求（如PUT）。相应实体主体部分中应该包含额各种已创建的资源的URL。Location首部包含的则是最具体的引用</p>\n<h4 id=\"202——Accepted（请求被接受）\"><a href=\"#202——Accepted（请求被接受）\" class=\"headerlink\" title=\"202——Accepted（请求被接受）\"></a>202——Accepted（请求被接受）</h4><p>请求已被接受，但服务器还未对其执行任何动作。且不保证服务器能够完成这个请求。</p>\n<h4 id=\"203——Non-Authoritative-Infomation\"><a href=\"#203——Non-Authoritative-Infomation\" class=\"headerlink\" title=\"203——Non-Authoritative Infomation\"></a>203——Non-Authoritative Infomation</h4><p>实体首部包含的信息不是来自于源端服务器，而是来自资源的一份副本。如果中间节点上有一份资源副本，但无法或者没有对它所发送的资源有关的元信息进行验证，就会出现这种情况</p>\n<h4 id=\"204——No-Content\"><a href=\"#204——No-Content\" class=\"headerlink\" title=\"204——No Content\"></a>204——No Content</h4><p>响应报文中包含若干首部和一个状态行，但没有实体的主体部分</p>\n<h4 id=\"205——Reset-Content\"><a href=\"#205——Reset-Content\" class=\"headerlink\" title=\"205——Reset Content\"></a>205——Reset Content</h4><p>负责告知浏览器清除当前页面中的所有HTML表单元素</p>\n<h4 id=\"206——Partial-Content\"><a href=\"#206——Partial-Content\" class=\"headerlink\" title=\"206——Partial Content\"></a>206——Partial Content</h4><p>成功执行了一个部分或Range（范围）请求。必须包含Content-Range、Date以及ETag或Content-Location首部</p>\n<hr>\n<h3 id=\"300-399——重定向状态码\"><a href=\"#300-399——重定向状态码\" class=\"headerlink\" title=\"300~399——重定向状态码\"></a>300~399——重定向状态码</h3><h4 id=\"300——Multiple-Choices\"><a href=\"#300——Multiple-Choices\" class=\"headerlink\" title=\"300——Multiple Choices\"></a>300——Multiple Choices</h4><p>客户端请求一个实际指向多个资源的URL时会返回这个状态码，返回这个状态码时会带有一个选项列表，这样用户就可以选择他所希望的一项了</p>\n<h4 id=\"301——Moved-Permanently\"><a href=\"#301——Moved-Permanently\" class=\"headerlink\" title=\"301——Moved Permanently\"></a>301——Moved Permanently</h4><p>在请求的URL已被移除时使用。响应的Location首部应当包含资源现在所处的URL</p>\n<h4 id=\"302——Found\"><a href=\"#302——Found\" class=\"headerlink\" title=\"302——Found\"></a>302——Found</h4><p>与301类似，但客户端使用Location首部给出URL来临时定位资源。将来的请求仍应当使用老的URL</p>\n<h4 id=\"303——See-Other\"><a href=\"#303——See-Other\" class=\"headerlink\" title=\"303——See Other\"></a>303——See Other</h4><p>告知客户端应当使用另一个URL来获取资源。新的URL位于响应报文的Location首部，主要目的是允许POST请求的相应将客户端定向到某个资源上去</p>\n<h4 id=\"304——Not-Modified\"><a href=\"#304——Not-Modified\" class=\"headerlink\" title=\"304——Not Modified\"></a>304——Not Modified</h4><p>客户端可以通过所包含的的请求首部，使其请求变成有条件的。带有这个状态码的相应不应该包含实体的主体部分</p>\n<h4 id=\"305——Use-Proxy\"><a href=\"#305——Use-Proxy\" class=\"headerlink\" title=\"305——Use Proxy\"></a>305——Use Proxy</h4><p>用来说明必须通过一个代理来访问资源，代理的位置由Location首部给出</p>\n<h4 id=\"307——Temporary-Redirect\"><a href=\"#307——Temporary-Redirect\" class=\"headerlink\" title=\"307——Temporary Redirect\"></a>307——Temporary Redirect</h4><p>与301类似，但客户端使用Location首部给出URL来临时定位资源。将来的请求仍应当使用老的URL</p>\n<h3 id=\"302、303、307之前的区别\"><a href=\"#302、303、307之前的区别\" class=\"headerlink\" title=\"302、303、307之前的区别\"></a>302、303、307之前的区别</h3><p>当HTTP/1.0客户端发起一个POST请求，并在响应中收到302重定向状态码时，它会接受Location首部的重定向URL，并向那个URL发起一个GET请求（不是POST请求）</p>\n<p>而HTTP/1.1则使用303状态码完成同样的行为</p>\n<p>对于HTTP/1.1客户端，用307状态码取代302状态码来进行临时重定向，这样302状态码就能被保留个给HTTP/1.0客户端使用了</p>\n<hr>\n<h3 id=\"400-499——客户端错误状态码\"><a href=\"#400-499——客户端错误状态码\" class=\"headerlink\" title=\"400~499——客户端错误状态码\"></a>400~499——客户端错误状态码</h3><h4 id=\"400——Bad-Request（请求错误）\"><a href=\"#400——Bad-Request（请求错误）\" class=\"headerlink\" title=\"400——Bad Request（请求错误）\"></a>400——Bad Request（请求错误）</h4><p>告知用户它发送了一个错误的请求</p>\n<h4 id=\"401——Unauthorized（未授权）\"><a href=\"#401——Unauthorized（未授权）\" class=\"headerlink\" title=\"401——Unauthorized（未授权）\"></a>401——Unauthorized（未授权）</h4><p>与适当的首部一同返回，在这些首部中请求客户端在获取对资源的访问权之前，对自己进行认证</p>\n<h4 id=\"402——Payment-Required（需付费）\"><a href=\"#402——Payment-Required（需付费）\" class=\"headerlink\" title=\"402——Payment Required（需付费）\"></a>402——Payment Required（需付费）</h4><h4 id=\"403——Forbidden（请求被拒绝）\"><a href=\"#403——Forbidden（请求被拒绝）\" class=\"headerlink\" title=\"403——Forbidden（请求被拒绝）\"></a>403——Forbidden（请求被拒绝）</h4><p>用于说明请求被服务器拒绝了。可以通过主题部分来描述拒绝原因。但一般是在服务器不想说明拒绝原因时使用这个状态码</p>\n<h4 id=\"404——Not-Found（资源未找到）\"><a href=\"#404——Not-Found（资源未找到）\" class=\"headerlink\" title=\"404——Not Found（资源未找到）\"></a>404——Not Found（资源未找到）</h4><p>用于说明服务器无法找到所请求的URL</p>\n<h4 id=\"405——Method-Not-Allowed（方法不被允许）\"><a href=\"#405——Method-Not-Allowed（方法不被允许）\" class=\"headerlink\" title=\"405——Method Not Allowed（方法不被允许）\"></a>405——Method Not Allowed（方法不被允许）</h4><p>发起的请求中带有所请求的URL不支持的方法。在响应的ALlow首部，告诉客户端所请求的资源可使用哪些方法</p>\n<h4 id=\"406——Not-Acceptable（无法接受）\"><a href=\"#406——Not-Acceptable（无法接受）\" class=\"headerlink\" title=\"406——Not Acceptable（无法接受）\"></a>406——Not Acceptable（无法接受）</h4><p>客户端可以指定参数来说明它们愿意接受什么类型的实体。服务器没有与客户端可接受的URL相匹配的资源时，使用此代码</p>\n<h4 id=\"407——Proxy-Authentication-Required（代理服务器未认证）\"><a href=\"#407——Proxy-Authentication-Required（代理服务器未认证）\" class=\"headerlink\" title=\"407——Proxy Authentication Required（代理服务器未认证）\"></a>407——Proxy Authentication Required（代理服务器未认证）</h4><p>要求对资源进行认证代理服务器</p>\n<h4 id=\"408——Request-Timeout（请求超时）\"><a href=\"#408——Request-Timeout（请求超时）\" class=\"headerlink\" title=\"408——Request Timeout（请求超时）\"></a>408——Request Timeout（请求超时）</h4><p>如果客户端完成请求所花的时间太长，服务器可以回送此状态码</p>\n<h4 id=\"409——Conflict（指令冲突）\"><a href=\"#409——Conflict（指令冲突）\" class=\"headerlink\" title=\"409——Conflict（指令冲突）\"></a>409——Conflict（指令冲突）</h4><p>用于说明请求可能在资源上引发一些冲突。服务器担心请求引发冲突时，返回此代码</p>\n<h4 id=\"410——Gone（已移除）\"><a href=\"#410——Gone（已移除）\" class=\"headerlink\" title=\"410——Gone（已移除）\"></a>410——Gone（已移除）</h4><p>服务器曾经拥有过此资源，但已经移除了</p>\n<h4 id=\"411——Length-Required（必须携带长度）\"><a href=\"#411——Length-Required（必须携带长度）\" class=\"headerlink\" title=\"411——Length Required（必须携带长度）\"></a>411——Length Required（必须携带长度）</h4><p>服务器要求在请求报文中包含Content-Length首部</p>\n<h4 id=\"412——Precondition-Failed（不符合请求条件）\"><a href=\"#412——Precondition-Failed（不符合请求条件）\" class=\"headerlink\" title=\"412——Precondition Failed（不符合请求条件）\"></a>412——Precondition Failed（不符合请求条件）</h4><p>客户端发起了条件请求，而其中一个条件失败了</p>\n<h4 id=\"413——Request-Entity-Too-Large（请求实体过大）\"><a href=\"#413——Request-Entity-Too-Large（请求实体过大）\" class=\"headerlink\" title=\"413——Request Entity Too Large（请求实体过大）\"></a>413——Request Entity Too Large（请求实体过大）</h4><p>客户端所发送的请求主体部分比服务器所能够或希望处理的要长</p>\n<h4 id=\"414——Request-URI-Too-Long（请求URL过长）\"><a href=\"#414——Request-URI-Too-Long（请求URL过长）\" class=\"headerlink\" title=\"414——Request URI Too Long（请求URL过长）\"></a>414——Request URI Too Long（请求URL过长）</h4><p>客户端所发请求中的请求URL比服务器能够或希望处理的要长</p>\n<h4 id=\"415——Unsupported-Media-Type（媒体不被支持）\"><a href=\"#415——Unsupported-Media-Type（媒体不被支持）\" class=\"headerlink\" title=\"415——Unsupported Media Type（媒体不被支持）\"></a>415——Unsupported Media Type（媒体不被支持）</h4><p>服务器无法理解或无法支持客户端所发实体的内容类型</p>\n<h4 id=\"416——Requested-Range-Not-Satisfiable（请求的范围无法被满足）\"><a href=\"#416——Requested-Range-Not-Satisfiable（请求的范围无法被满足）\" class=\"headerlink\" title=\"416——Requested Range Not Satisfiable（请求的范围无法被满足）\"></a>416——Requested Range Not Satisfiable（请求的范围无法被满足）</h4><p>请求报文请求的是某个资源的某个范围，而此范围无效或无法满足</p>\n<h4 id=\"417——Expection-Failed（无法满足期望）\"><a href=\"#417——Expection-Failed（无法满足期望）\" class=\"headerlink\" title=\"417——Expection Failed（无法满足期望）\"></a>417——Expection Failed（无法满足期望）</h4><p>请求的Expect请求首部包含了一个期望，但服务器无法满足此期望</p>\n<hr>\n<h3 id=\"500-599——服务器错误状态码\"><a href=\"#500-599——服务器错误状态码\" class=\"headerlink\" title=\"500~599——服务器错误状态码\"></a>500~599——服务器错误状态码</h3><h4 id=\"500——Internal-Server-Error（服务器内部错误）\"><a href=\"#500——Internal-Server-Error（服务器内部错误）\" class=\"headerlink\" title=\"500——Internal Server Error（服务器内部错误）\"></a>500——Internal Server Error（服务器内部错误）</h4><p>服务器遇到一个妨碍它为请求提供服务的错误</p>\n<h4 id=\"501——Not-Implemented（请求超出能力范围）\"><a href=\"#501——Not-Implemented（请求超出能力范围）\" class=\"headerlink\" title=\"501——Not Implemented（请求超出能力范围）\"></a>501——Not Implemented（请求超出能力范围）</h4><p>客户端发起的请求超出服务器的能力范围</p>\n<h4 id=\"502——Bad-Gateway（错误的网关）\"><a href=\"#502——Bad-Gateway（错误的网关）\" class=\"headerlink\" title=\"502——Bad Gateway（错误的网关）\"></a>502——Bad Gateway（错误的网关）</h4><p>作为代理或网关使用的服务器从请求响应链的下一条链路上收到一条伪响应</p>\n<h4 id=\"503——Service-Unavailable（服务不可用）\"><a href=\"#503——Service-Unavailable（服务不可用）\" class=\"headerlink\" title=\"503——Service Unavailable（服务不可用）\"></a>503——Service Unavailable（服务不可用）</h4><p>服务器现在无法为请求提供服务，但将来可以</p>\n<h4 id=\"504——Gateway-Timeout（网关超时）\"><a href=\"#504——Gateway-Timeout（网关超时）\" class=\"headerlink\" title=\"504——Gateway Timeout（网关超时）\"></a>504——Gateway Timeout（网关超时）</h4><p>响应来自一个网关或代理，他们在等待另一服务器对齐请求进行响应时超时了</p>\n<h4 id=\"505——HTTP-Version-Not-Supported（HTTP协议版本不正确）\"><a href=\"#505——HTTP-Version-Not-Supported（HTTP协议版本不正确）\" class=\"headerlink\" title=\"505——HTTP Version Not Supported（HTTP协议版本不正确）\"></a>505——HTTP Version Not Supported（HTTP协议版本不正确）</h4><p>服务器收到的请求使用了它无法或不愿支持的版本</p>\n"}