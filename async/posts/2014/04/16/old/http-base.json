{"tags":[{"name":"HTTP","permalink":"http://lingyu.life/tags/HTTP/","url":"/async/tags/HTTP.json","count":2}],"categories":[{"name":"前端综合","permalink":"http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E7%BB%BC%E5%90%88/","url":"/async/categories/前端综合.json","count":6}],"url":"/async/posts/2014/04/16/old/http-base.json","date":1397577600000,"path":{"year":2014,"month":4,"day":16,"name":"old/http-base"},"subtitle":"HTTP协议基础内容，简要介绍Web组件、URL、HTTP报文以及一些首部","title":"HTTP协议的一些基础知识","permalink":"http://lingyu.life/2014/04/16/old/http-base/","content":"<p>之前大致上看了一下《HTTP权威指南》，当时看书时做了这么个读书笔记。今天同学面试某大公司也被问到了HTTP协议，自己也做了一下发现之前明明看过却都不会做了。时隔三周忘得干干净净，果然还是要学而实习</p>\n<a id=\"more\"></a>\n\n<h2 id=\"HTTP通信简要步骤：\"><a href=\"#HTTP通信简要步骤：\" class=\"headerlink\" title=\"HTTP通信简要步骤：\"></a>HTTP通信简要步骤：</h2><ol>\n<li>浏览器从URL中解析出服务器的主机名</li>\n<li>浏览器将服务器的主机名转换成服务器的IP地址</li>\n<li>浏览器将端口号从URL中解析出来</li>\n<li>浏览器建立一条与Web服务器的TCP连接</li>\n<li>浏览器向服务器发送一条HTTP请求报文</li>\n<li>服务器想浏览器回送一条HTTP响应报文</li>\n<li>关闭连接，浏览器显示文档</li>\n</ol>\n<hr>\n<h2 id=\"Web组件结构\"><a href=\"#Web组件结构\" class=\"headerlink\" title=\"Web组件结构\"></a>Web组件结构</h2><h3 id=\"代理\"><a href=\"#代理\" class=\"headerlink\" title=\"代理\"></a>代理</h3><p>位于客户端和服务器之间，接受所有客户端的HTTP请求，并将这些请求转发给服务器</p>\n<h3 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h3><p>Web缓存或代理缓存是一种特殊的HTTP代理服务器，可以将经过代理传送的常用文档复制保存起来，下一个请求同一文档的客户端就可以享受缓存的私有副本所提供的服务了</p>\n<h3 id=\"网关\"><a href=\"#网关\" class=\"headerlink\" title=\"网关\"></a>网关</h3><p>一种特殊的服务器，作为其他服务器的中间实体使用通常用于将HTTP流量转换成其他的协议</p>\n<h3 id=\"隧道\"><a href=\"#隧道\" class=\"headerlink\" title=\"隧道\"></a>隧道</h3><p>隧道建立起来之后，就会在两条连接黄子健对原始数据进行盲转发的HTTP应用程序。HTTP隧道通常用来在一条或多条HTTP连接上转发非HTTP数据，转发时不会窥探数据</p>\n<h3 id=\"Agent代理（用户代理）\"><a href=\"#Agent代理（用户代理）\" class=\"headerlink\" title=\"Agent代理（用户代理）\"></a>Agent代理（用户代理）</h3><p>用户代理代表用户发起HTTP请求的客户端程序。所有发布Web请求的应用程序都是HTTP Agent代理</p>\n<hr>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"URL语法\"><a href=\"#URL语法\" class=\"headerlink\" title=\"URL语法\"></a>URL语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;scheme&gt;:&#x2F;&#x2F;&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;post&gt;&#x2F;&lt;path&gt;;&lt;params&gt;?&lt;query&gt;#&lt;frag&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"组成部分\"><a href=\"#组成部分\" class=\"headerlink\" title=\"组成部分\"></a>组成部分</h3><ol>\n<li>方案（scheme）：访问服务器获取资源用的协议</li>\n<li>用户（user）：某些方案访问资源需要用户名</li>\n<li>密码（password）：欧诺个户名后面可能要包含的密码，以冒号分隔</li>\n<li>主机（host）：资源宿主服务器的主机名或IP地址</li>\n<li>端口（post）：资源宿主服务器正在监听的端口号，很多方案有自己的默认端口（HTTP为80，HTTPS为443）</li>\n<li>路径（PATH）：服务器上资源的本地名，由一个斜杠将其与前面的URL组件分离开来</li>\n<li>参数（params）：某些方案会用这个组件来指定输入参数</li>\n<li>查询（query）：某些方案会用这个组件传递参数</li>\n<li>片段（frag）：一小片或一部分资源的名字，不会发送给服务器，在客户端内部使用</li>\n</ol>\n<h3 id=\"常见方案\"><a href=\"#常见方案\" class=\"headerlink\" title=\"常见方案\"></a>常见方案</h3><ol>\n<li>http：超文本传输协议方案，除了没有用户名和密码之外，与通用的URL格式相符，默认端口80</li>\n<li>https：与http唯一区别在于https使用了网景的SSL。默认端口为443</li>\n<li>mailto：指向的是E-mail地址，mailto URL的格式与标准的URL的格式不同</li>\n<li>ftp：文件传输协议URL可以用来从FTP服务器上下载或上载文件，并获取FTP服务器上的目录结构内容的列表</li>\n<li>rtsp、rtspu：RTSP URL是可以通过实时流传输协议解析的音/视频媒体资源的标识符</li>\n<li>file：表示一台指定主机上可直接访问的文件</li>\n<li>news：用来访问一些特定的文章或新闻组</li>\n<li>telnet：用于访问交互式业务</li>\n</ol>\n<hr>\n<h2 id=\"HTTP报文\"><a href=\"#HTTP报文\" class=\"headerlink\" title=\"HTTP报文\"></a>HTTP报文</h2><h3 id=\"报文组成\"><a href=\"#报文组成\" class=\"headerlink\" title=\"报文组成\"></a>报文组成</h3><ol>\n<li>起始行</li>\n<li>首部块</li>\n<li>可选的包含数据的主体部分</li>\n</ol>\n<p>起始行和首部就是由行分割的ASCII文本，每行都以一个由两个字符组成的行终止符CRLF组成（一个回车-13和一个换行符-10）</p>\n<h2 id=\"报文分类\"><a href=\"#报文分类\" class=\"headerlink\" title=\"报文分类\"></a>报文分类</h2><p>两大类：</p>\n<ol>\n<li>请求报文：客户端发向服务器</li>\n<li>响应报文：服务器发向客户端</li>\n</ol>\n<hr>\n<h2 id=\"起始行\"><a href=\"#起始行\" class=\"headerlink\" title=\"起始行\"></a>起始行</h2><h3 id=\"请求行\"><a href=\"#请求行\" class=\"headerlink\" title=\"请求行\"></a>请求行</h3><p>请求报文的起始行，包含了一个方法和一个URL</p>\n<h3 id=\"响应行\"><a href=\"#响应行\" class=\"headerlink\" title=\"响应行\"></a>响应行</h3><p>响应报文的起始行，包含了响应报文所使用的HTTP版本、数字状态码、以及描述状态码的原因短语</p>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><p>请求的起始行以方法开始，用来告知服务器要做什么</p>\n<h3 id=\"状态码\"><a href=\"#状态码\" class=\"headerlink\" title=\"状态码\"></a>状态码</h3><p>位于响应的起始行中，告诉客户端发生了什么事情</p>\n<h3 id=\"原因短语\"><a href=\"#原因短语\" class=\"headerlink\" title=\"原因短语\"></a>原因短语</h3><p>响应的起始行中的最后一个组件，为状态码提供文本形式的解释</p>\n<h3 id=\"版本号\"><a href=\"#版本号\" class=\"headerlink\" title=\"版本号\"></a>版本号</h3><p>以HTTP/x.y的形式出现在请求和响应报文的起始行中</p>\n<hr>\n<h2 id=\"首部\"><a href=\"#首部\" class=\"headerlink\" title=\"首部\"></a>首部</h2><p>跟在起始行后面呃就是零个、一个或多个HTTP首部字段。本质上来说它们只是一些名/值对的列表</p>\n<h3 id=\"首部分类\"><a href=\"#首部分类\" class=\"headerlink\" title=\"首部分类\"></a>首部分类</h3><ol>\n<li>通用首部：可以出现在请求报文中，也可以出现在响应报文中</li>\n<li>请求首部：提供更多关于请求的信息</li>\n<li>响应首部：提供更多关于响应的信息</li>\n<li>实体首部：描述主体的长度和内容，或者资源自身</li>\n<li>扩展首部：规范中没有定义的新首部</li>\n</ol>\n<hr>\n<h2 id=\"HTTP方法\"><a href=\"#HTTP方法\" class=\"headerlink\" title=\"HTTP方法\"></a>HTTP方法</h2><h3 id=\"安全方法\"><a href=\"#安全方法\" class=\"headerlink\" title=\"安全方法\"></a>安全方法</h3><p>GET和HEAD方法是安全方法，他们不会再服务器上产生什么结果</p>\n<h3 id=\"GET\"><a href=\"#GET\" class=\"headerlink\" title=\"GET\"></a>GET</h3><p>最常用的方法，通常用于请求服务器发送某个资源</p>\n<h3 id=\"HEAD\"><a href=\"#HEAD\" class=\"headerlink\" title=\"HEAD\"></a>HEAD</h3><p>与GET行为相似，但服务器在响应中只返回首部，不会返回实体的主体部分，这样允许客户端在未获取实际资源的情况下，对资源首部进行检查，可以：</p>\n<ol>\n<li>在不获取资源的情况下了解资源的情况</li>\n<li>通过查看响应中的状态码，看看某个对象是否存在</li>\n<li>通过查看首部，测试资源是否被修改</li>\n</ol>\n<h3 id=\"PUT\"><a href=\"#PUT\" class=\"headerlink\" title=\"PUT\"></a>PUT</h3><p>与GET相反，PUT方法向服务器写入文档。语义就是让服务器用请求的主体部分来创建一个由所请求URL命名的新文档，如果已经存在呃话，就替换它</p>\n<h3 id=\"POST\"><a href=\"#POST\" class=\"headerlink\" title=\"POST\"></a>POST</h3><p>起初用来向服务器输入数据，现在通常用它来支持HTML的表单</p>\n<h3 id=\"TRACE\"><a href=\"#TRACE\" class=\"headerlink\" title=\"TRACE\"></a>TRACE</h3><p>客户端发起一个请求时，请求可能要穿过防火墙、代理、网关或其他一一些应用程序。每个中间节点都可能会修改原始的HTTP请求，TRACE方法允许客户端在最终将请求发送给服务器时，看看它变成什么样子。</p>\n<p>TRACE请求不能带有实体的主题部分。TRACE响应的实体主体部分包含了响应服务器收到的请求的精确副本</p>\n<h3 id=\"OPTIONS\"><a href=\"#OPTIONS\" class=\"headerlink\" title=\"OPTIONS\"></a>OPTIONS</h3><p>请求WEB服务器告知其支持的各种功能</p>\n<h3 id=\"DELETE\"><a href=\"#DELETE\" class=\"headerlink\" title=\"DELETE\"></a>DELETE</h3><h2 id=\"请服务器删除请求URL所指定的资源，但不保证一定会被执行\"><a href=\"#请服务器删除请求URL所指定的资源，但不保证一定会被执行\" class=\"headerlink\" title=\"请服务器删除请求URL所指定的资源，但不保证一定会被执行\"></a>请服务器删除请求URL所指定的资源，但不保证一定会被执行</h2><h2 id=\"首部-1\"><a href=\"#首部-1\" class=\"headerlink\" title=\"首部\"></a>首部</h2><h3 id=\"通用首部\"><a href=\"#通用首部\" class=\"headerlink\" title=\"通用首部\"></a>通用首部</h3><p>请求报文和响应报文都可以使用的首部，有：</p>\n<ol>\n<li>Connection：允许客户端和服务器指定与请求/响应连接有关的选项</li>\n<li>Date：提供日期和时间标志，说明报文什么时候创建的</li>\n<li>MIME-Version：给出了发送端使用的MIME版本</li>\n<li>Trailer：如果报文采用了分块传输编码方式，可以用这个首部列出位于报文拖挂部分的首部集合</li>\n<li>Transfer-Encoding：告知接受端为了保证报文的可靠传输，对报文采用了什么编码方式</li>\n<li>Update：给出发送端可能想要升级使用的新版本或协议</li>\n<li>Via：显示豹纹经过的中间节点（代理、网关）</li>\n<li>Cache-Control：用于随报文传送缓存指示</li>\n<li>Pragma：另一种随报文传送指示的方式，但并不专用于缓存</li>\n</ol>\n<h3 id=\"请求首部\"><a href=\"#请求首部\" class=\"headerlink\" title=\"请求首部\"></a>请求首部</h3><p>只在请求报文中有意义，有：</p>\n<ol>\n<li>Client-IP：客户端及其的IP</li>\n<li>FROM：客户端用户的E-mail地址</li>\n<li>Host：接受请求的服务器主机名和端口号</li>\n<li>Referer：包含当前请求URI的文档的URL</li>\n<li>UA-Color：客户端显示器的显示颜色有关的信息</li>\n<li>UA-CPU：给出客户端CPU的类型或制造商</li>\n<li>UA-Disp：客户端显示器（屏幕）能力相关信息</li>\n<li>UA-OS：客户端机器上的操作系统名称及版本</li>\n<li>UA-Pixels：客户端显示器的像素信息</li>\n<li>User-Agent：发起请求的应用程序名称</li>\n</ol>\n<p>Accept首部为客户端提供了一种将其喜好和能力告知服务器的方式，告诉服务器它们想要什么，可以使用什么，以及他们不想要什么：</p>\n<ol>\n<li>Accept：告诉服务器能够发送哪些媒体类型</li>\n<li>Accept-Charset：告诉服务器能够发送哪些字符集</li>\n<li>Accept-Encoding：告诉服务器能发送哪些编码方式</li>\n<li>Accept-Language：告诉服务器能够发送哪些语言</li>\n<li>TE：告诉服务器可以使用那些扩展传输编码</li>\n</ol>\n<p>条件请求首部在客户端希望为请求加上某些限制时使用，要求服务器在队请求进行响应之前，确保某个条件为真：</p>\n<ol>\n<li>Expect：允许客户端列出某请求所要求的服务器行为</li>\n<li>If-Match：如果实体标记与文档当前的实体标记想匹配，就获取这份文档</li>\n<li>If-Modified-Since：除非在某个指定的日期之后资源被修改过，否则就限制这个请求</li>\n<li>If-None-Match：如果提供的实体标记与当前文档的实体标记不相符，就获取文档</li>\n<li>If-Range：允许对文档的某个范围进行条件请求</li>\n<li>If-Unmodified-Since：除非在某个指定日期之后资源没有被修改过，否则就限制这个请求</li>\n<li>Range：如果服务器支持范围请求，就请求资源的指定范围</li>\n</ol>\n<p>安全请求首部有：</p>\n<ol>\n<li>Authorization：包含了客户端提供了服务器，以便对其自身进行认证的数据</li>\n<li>Cookie：客户端用它向服务器传送一个令牌，它并不是真正的安全受不，但却是隐含了安全功能</li>\n<li>Cookie2：用来说明请求端支持的cookie版本</li>\n</ol>\n<p>代理请求首部：</p>\n<ol>\n<li>Max-Forward：在通往源端服务器的路径上，将请求转发给其他代理或网关的最大次数，与TRACE方法一同使用</li>\n<li>Proxy-Authorization：与Authorization首部相同，但这个首部是与代理进行认证时使用的</li>\n<li>Proxy-Connection：与Connection首部相同，但这个首部是与代理建立连接时使用的</li>\n</ol>\n<h3 id=\"响应首部\"><a href=\"#响应首部\" class=\"headerlink\" title=\"响应首部\"></a>响应首部</h3><p>响应报文有自己的首部集，为客户端提供一些额外的响应信息：</p>\n<ol>\n<li>Age：响应持续时间</li>\n<li>Public：服务器为其资源支持的请求方法列表</li>\n<li>Retry-After：如果资源不可用，在此日期或时间重试</li>\n<li>Server：服务器应用程序软件的名称和版本</li>\n<li>Title：对HTML来说，就是HTML文档的源端给出的标题</li>\n<li>Warning：比原因短语中更详细一些的警告报文</li>\n</ol>\n<p>协商首部，如果资源有多重白哦是方法，可以使用协商首部为服务器和客户端提供对资源进行协商的能力：</p>\n<ol>\n<li>Accept-Ranges：对此资源来说，服务器可接受的范围类型</li>\n<li>Vary：服务器查看其他首部的列表，可能会使响应发生变化</li>\n</ol>\n<p>安全响应首部：</p>\n<ol>\n<li>Proxy-Authenticate：来自代理的对客户端的质询列表</li>\n<li>Set-Cookie：不是真正的安全首部，但隐含安全功能，可以在客户端设置一个令牌，以便服务器对客户端进行标识</li>\n<li>Set-Cookie2：与Set-Cookie相似</li>\n<li>WWW-Authenticate：来自服务器呃对客户端的质询列表</li>\n</ol>\n<h3 id=\"实体首部\"><a href=\"#实体首部\" class=\"headerlink\" title=\"实体首部\"></a>实体首部</h3><p>实体首部提供了有关实体及其内容的大量信息，从有关对象类型的信息，到能够对资源使用的各种有效的请求方法：</p>\n<ol>\n<li>Allow：列出了可以对此实体执行的请求方法</li>\n<li>Location：告知客户端实体实际上位于何处</li>\n</ol>\n<p>内容首部提供了与实体内容有关的特定信息，说明了其类型、尺寸以及处理它所需的其他有用信息：</p>\n<ol>\n<li>Content-Base：解析主题中的相对URL是使用的基础URL</li>\n<li>Content-Encoding：对主体执行的任意编码方式</li>\n<li>Content-Language：理解主题时最适合使用的自然语言</li>\n<li>Content-Length：主体的长度和尺寸</li>\n<li>Content-Location：资源实际所处的位置</li>\n<li>Content-MD5：主体的MD5校验和</li>\n<li>Content-Range：在整个资源中此实体表示的字节范围</li>\n<li>Content-Type：主题的对象类型</li>\n</ol>\n<p>实体缓存首部提供了与被缓存实体有关的信息：</p>\n<ol>\n<li>ETag：与此实体相关的实体标记</li>\n<li>Expires：实体不再有效，要从原始的源端再次获取此实体的日期和时间</li>\n<li>Last-Modified：这个实体最后一次被修改的日期和时间</li>\n</ol>\n"}