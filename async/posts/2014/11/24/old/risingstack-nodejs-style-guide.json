{"tags":[{"name":"NodeJs","permalink":"http://lingyu.life/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":11}],"categories":[{"name":"服务端技术","permalink":"http://lingyu.life/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF/","url":"/async/categories/服务端技术.json","count":2}],"url":"/async/posts/2014/11/24/old/risingstack-nodejs-style-guide.json","date":1416758400000,"path":{"year":2014,"month":11,"day":24,"name":"old/risingstack-nodejs-style-guide"},"subtitle":"A mostly reasonable approach to JavaScript - how we write Node.js at RisingStack","title":"RisingStack的Node.js风格指南","permalink":"http://lingyu.life/2014/11/24/old/risingstack-nodejs-style-guide/","content":"<p>本文翻译自<a href=\"https://github.com/RisingStack/node-style-guide\" target=\"_blank\" rel=\"noopener\">RisingStack/node-style-guide</a></p>\n<a id=\"more\"></a>\n\n<h2 id=\"RisingStack-的Node-js-风格指南\"><a href=\"#RisingStack-的Node-js-风格指南\" class=\"headerlink\" title=\"RisingStack 的Node.js 风格指南() {\"></a><a href=\"http://risingstack.com\" target=\"_blank\" rel=\"noopener\">RisingStack</a> 的Node.js 风格指南() {</h2><h3 id=\"文章的大部分内容来自-Airbnb-stlyeguide\"><a href=\"#文章的大部分内容来自-Airbnb-stlyeguide\" class=\"headerlink\" title=\"文章的大部分内容来自 Airbnb stlyeguide\"></a>文章的大部分内容来自 <a href=\"https://github.com/airbnb/javascript\" target=\"_blank\" rel=\"noopener\">Airbnb stlyeguide</a></h3><p>以下风格指南对此指南有很大影响:</p>\n<ul>\n<li>@caolan’s <a href=\"http://caolanmcmahon.com/posts/nodejs_style_and_structure\" target=\"_blank\" rel=\"noopener\">Node.js stlyeguide</a></li>\n<li>@felixge’s <a href=\"https://github.com/felixge/node-style-guide\" target=\"_blank\" rel=\"noopener\">Node.js stlyeguide</a></li>\n</ul>\n<h2 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h2><ul>\n<li><p><strong>原生类型</strong>: 当访问一个原生类型时直接对其值进行操作</p>\n<ul>\n<li><code>string</code></li>\n<li><code>number</code></li>\n<li><code>boolean</code></li>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo;</span><br><span class=\"line\"></span><br><span class=\"line\">bar = <span class=\"number\">9</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(foo, bar); <span class=\"comment\">// =&gt; 1, 9</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>复杂类型</strong>: 当访问一个复杂类型时，将对其值的引用上进行操作</p>\n<ul>\n<li><code>object</code></li>\n<li><code>array</code></li>\n<li><code>function</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo;</span><br><span class=\"line\"></span><br><span class=\"line\">bar[<span class=\"number\">0</span>] = <span class=\"number\">9</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(foo[<span class=\"number\">0</span>], bar[<span class=\"number\">0</span>]); <span class=\"comment\">// =&gt; 9, 9</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><ul>\n<li><p>使用字面量创建对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> item = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> item = &#123;&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用可读的同义单词来代替JavaScript的保留字</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐，class是保留字</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> superman = &#123;</span><br><span class=\"line\">  class: 'alien'</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐，klass不具备可读性</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> superman = &#123;</span><br><span class=\"line\">  klass: <span class=\"string\">'alien'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> superman = &#123;</span><br><span class=\"line\">  type: <span class=\"string\">'alien'</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><ul>\n<li><p>使用字面量创建数组</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = [];</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果不知道数组的长度，使用Array#push方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> someStack = [];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">someStack[someStack.length] = <span class=\"string\">'abracadabra'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">someStack.push(<span class=\"string\">'abracadabra'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用Array#slice来拷贝数组，这样性能较好，详见<a href=\"http://jsperf.com/converting-arguments-to-an-array/7\" target=\"_blank\" rel=\"noopener\">jsPerf</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> len = items.length;</span><br><span class=\"line\"><span class=\"keyword\">var</span> itemsCopy = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐，遍历性能较低</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">  itemsCopy[i] = items[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">itemsCopy = items.slice();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将类数组对象转变为数组时，使用Array#slice方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trigger</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> args = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Strings\"><a href=\"#Strings\" class=\"headerlink\" title=\"Strings\"></a>Strings</h2><ul>\n<li><p>对字符串使用单引号<code>&#39;&#39;</code>包裹</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"Bob Parr\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'Bob Parr'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fullName = <span class=\"string\">\"Bob \"</span> + <span class=\"keyword\">this</span>.lastName;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fullName = <span class=\"string\">'Bob '</span> + <span class=\"keyword\">this</span>.lastName;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串长度超过80个字符时，应当将字符串写成多行并通过加号进行拼接</p>\n</li>\n<li><p>注意：如果过度使用长字符串拼接方式将影响性能，详见<a href=\"http://jsperf.com/ya-string-concat\" target=\"_blank\" rel=\"noopener\">jsPerf</a> &amp; <a href=\"https://github.com/airbnb/javascript/issues/40\" target=\"_blank\" rel=\"noopener\">Discussion</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> errorMessage = <span class=\"string\">'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> errorMessage = <span class=\"string\">'This is a super long error that was thrown because \\</span></span><br><span class=\"line\"><span class=\"string\">of Batman. When you stop to think about how Batman had anything to do \\</span></span><br><span class=\"line\"><span class=\"string\">with this, you would get nowhere \\</span></span><br><span class=\"line\"><span class=\"string\">fast.'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> errorMessage = <span class=\"string\">'This is a super long error that was thrown because '</span> +</span><br><span class=\"line\">  <span class=\"string\">'of Batman. When you stop to think about how Batman had anything to do '</span> +</span><br><span class=\"line\">  <span class=\"string\">'with this, you would get nowhere fast.'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当以编码的方式构建一个字符串时，使用Array#join方法，而不要拼接字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> items;</span><br><span class=\"line\"><span class=\"keyword\">var</span> messages;</span><br><span class=\"line\"><span class=\"keyword\">var</span> length;</span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">messages = [&#123;</span><br><span class=\"line\">  state: <span class=\"string\">'success'</span>,</span><br><span class=\"line\">  message: <span class=\"string\">'This one worked.'</span></span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  state: <span class=\"string\">'success'</span>,</span><br><span class=\"line\">  message: <span class=\"string\">'This one worked as well.'</span></span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  state: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">  message: <span class=\"string\">'This one did not work.'</span></span><br><span class=\"line\">&#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">length = messages.length;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inbox</span>(<span class=\"params\">messages</span>) </span>&#123;</span><br><span class=\"line\">  items = <span class=\"string\">'&lt;ul&gt;'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    items += <span class=\"string\">'&lt;li&gt;'</span> + messages[i].message + <span class=\"string\">'&lt;/li&gt;'</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> items + <span class=\"string\">'&lt;/ul&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inbox</span>(<span class=\"params\">messages</span>) </span>&#123;</span><br><span class=\"line\">  items = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    items[i] = messages[i].message;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;ul&gt;&lt;li&gt;'</span> + items.join(<span class=\"string\">'&lt;/li&gt;&lt;li&gt;'</span>) + <span class=\"string\">'&lt;/li&gt;&lt;/ul&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><ul>\n<li><p>函数表达式:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 匿名函数表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> anonymous = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 命名函数表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> named = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">named</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 立即执行函数 (immediately-invoked function expression, IIFE)</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Welcome to the Internet. Please follow me.'</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不要在非函数块（if、while等代码块）中声明函数，这种情况下应当将函数赋值给变量</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (currentUser) &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Nope.'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> test;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (currentUser) &#123;</span><br><span class=\"line\">  test = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Yup.'</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不要声明<code>arguments</code>变量，这样将覆盖函数作用域的<code>arguments</code>对象（夺取了优先权，导致无法访问函数作用域的<code>arguments</code>）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">nope</span>(<span class=\"params\">name, options, arguments</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">yup</span>(<span class=\"params\">name, options, args</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><ul>\n<li><p>使用符号<code>.</code>来访问属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> luke = &#123;</span><br><span class=\"line\">  jedi: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  age: <span class=\"number\">28</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isJedi = luke[<span class=\"string\">'jedi'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isJedi = luke.jedi;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在需要通过变量访问属性时使用中括号<code>[]</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> luke = &#123;</span><br><span class=\"line\">  jedi: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  age: <span class=\"number\">28</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getProp</span>(<span class=\"params\">prop</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> luke[prop];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> isJedi = getProp(<span class=\"string\">'jedi'</span>);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><ul>\n<li><p>使用<code>var</code>来声明变量，这样能避免意外声明全局变量、污染全局命名空间。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">superPower = <span class=\"keyword\">new</span> SuperPower();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> superPower = <span class=\"keyword\">new</span> SuperPower();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>每个变量声明新启一行，并在每个声明前面加上<code>var</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> items = getItems(),</span><br><span class=\"line\">      goSportsTeam = <span class=\"literal\">true</span>,</span><br><span class=\"line\">      dragonball = <span class=\"string\">'z'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> items = getItems();</span><br><span class=\"line\"> <span class=\"keyword\">var</span> goSportsTeam = <span class=\"literal\">true</span>;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> dragonball = <span class=\"string\">'z'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>先声明需要赋值的变量，后声明不需要赋值的变量。这样后声明的变量能够依靠前面生成变量来生成自己的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"><span class=\"keyword\">var</span> items = getItems(),</span><br><span class=\"line\"><span class=\"keyword\">var</span> dragonball,</span><br><span class=\"line\"><span class=\"keyword\">var</span> goSportsTeam = <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"keyword\">var</span> len;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = getItems(),</span><br><span class=\"line\"><span class=\"keyword\">var</span> goSportsTeam = <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"keyword\">var</span> dragonball,</span><br><span class=\"line\"><span class=\"keyword\">var</span> length,</span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在作用域的顶部声明所有变量，这样有助于避免变量提升导致的相关问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  test();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'doing stuff..'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//..other stuff..</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = getName();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (name === <span class=\"string\">'test'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = getName();</span><br><span class=\"line\"></span><br><span class=\"line\">  test();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'doing stuff..'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//..other stuff..</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (name === <span class=\"string\">'test'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = getName();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">arguments</span>.length) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">arguments</span>.length) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = getName();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"模块引用\"><a href=\"#模块引用\" class=\"headerlink\" title=\"模块引用\"></a>模块引用</h2><ul>\n<li><p>按照如下顺序引用模块</p>\n<ul>\n<li>核心模块</li>\n<li>npm上的工具模块</li>\n<li>其他模块</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Car = <span class=\"built_in\">require</span>(<span class=\"string\">'./models/Car'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">async</span> = <span class=\"built_in\">require</span>(<span class=\"string\">'async'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">async</span> = <span class=\"built_in\">require</span>(<span class=\"string\">'async'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Car = <span class=\"built_in\">require</span>(<span class=\"string\">'./models/Car'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在模块引用时不要加上<code>.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Batmobil = <span class=\"built_in\">require</span>(<span class=\"string\">'./models/Car.js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Batmobil = <span class=\"built_in\">require</span>(<span class=\"string\">'./models/Car'</span>);</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<h2 id=\"回调函数\"><a href=\"#回调函数\" class=\"headerlink\" title=\"回调函数\"></a>回调函数</h2><ul>\n<li><p>总是在回调函数中检查是否出现错误</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">database.get(<span class=\"string\">'pokemons'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, pokemons</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(pokemons);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\">database.get(<span class=\"string\">'drabonballs'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, drabonballs</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过某种方式处理错误，或者通过一个回调函数返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(drabonballs);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回调函数也需要返回</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">database.get(<span class=\"string\">'drabonballs'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, drabonballs</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果不在这里返回</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 这一样依旧会执行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(drabonballs);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\">database.get(<span class=\"string\">'drabonballs'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, drabonballs</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过某种方式处理错误，或者通过一个回调函数返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(drabonballs);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"异常捕获（Try-catch）\"><a href=\"#异常捕获（Try-catch）\" class=\"headerlink\" title=\"异常捕获（Try-catch）\"></a>异常捕获（Try-catch）</h2><ul>\n<li><p>只在同步函数中使用Try-catch</p>\n<p>Try-catch代码块不能用来包裹异步的代码。Try-catch代码块将冒泡到最顶层，并记录整个冒泡的路径。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readPackageJson</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.readFile(<span class=\"string\">'package.json'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, file</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readPackageJson</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.readFile(<span class=\"string\">'package.json'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, file</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>  callback(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在同步调用中使用Try-catch捕获异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.parse(jsonAsAString);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  data = <span class=\"built_in\">JSON</span>.parse(jsonAsAString);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 处理错误 —— 最好不只是用console.log输出</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"提升\"><a href=\"#提升\" class=\"headerlink\" title=\"提升\"></a>提升</h2><ul>\n<li><p>变量声明会提升到作用域顶端，但对这些变量的赋值是不会提升的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如我们所知，这不起作用 （没有同名的全局变量情况下）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(notDefined); <span class=\"comment\">// =&gt; 抛出一个引用错误</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在引用一个变量之后创建一个变量声明一样能够正常工作</span></span><br><span class=\"line\"><span class=\"comment\">// 这是由于变量会提升。注意：这里赋值`true`并没有被提升</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(declaredButNotAssigned); <span class=\"comment\">// =&gt; undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> declaredButNotAssigned = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解释器会将变量声明提升到作用域的顶部</span></span><br><span class=\"line\"><span class=\"comment\">// 这也就意味着上例可以写成如下方式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> declaredButNotAssigned;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(declaredButNotAssigned); <span class=\"comment\">// =&gt; undefined</span></span><br><span class=\"line\">  declaredButNotAssigned = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>匿名函数表达式只会提升变量定义，函数赋值语句不会提升</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(anonymous); <span class=\"comment\">// =&gt; undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">  anonymous(); <span class=\"comment\">// =&gt; TypeError anonymous 不是函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> anonymous = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'anonymous function expression'</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>命名函数表达式同样提升变量定义，而不会提升函数名称和函数体</p>\n</li>\n<li><p>Named function expressions hoist the variable name, not the function name or the function body.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(named); <span class=\"comment\">// =&gt; undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">  named(); <span class=\"comment\">// =&gt; TypeError named 不是一个函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  superPower(); <span class=\"comment\">// =&gt; ReferenceError superPower 未定义</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> named = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">superPower</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Flying'</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 就算函数名称和变量名称相同，也是一样的</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(named); <span class=\"comment\">// =&gt; undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">  named(); <span class=\"comment\">// =&gt; TypeError named 不是一个函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> named = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">named</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'named'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数声明会提升名称和函数体</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">example</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  superPower(); <span class=\"comment\">// =&gt; Flying</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">superPower</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Flying'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更多信息可以查看 <a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\" target=\"_blank\" rel=\"noopener\">JavaScript Scoping &amp; Hoisting</a> ，作者为 <a href=\"http://www.adequatelygood.com\" target=\"_blank\" rel=\"noopener\">Ben Cherry</a></p>\n</li>\n</ul>\n<h2 id=\"条件表达式和相等判断\"><a href=\"#条件表达式和相等判断\" class=\"headerlink\" title=\"条件表达式和相等判断\"></a>条件表达式和相等判断</h2><ul>\n<li><p>使用 <code>===</code> 和 <code>!==</code> ，不要用 <code>==</code> 和 <code>!=</code></p>\n</li>\n<li><p>条件表达式计算时会强迫使用<code>ToBoolean</code>方法，并遵循如下规则：</p>\n<ul>\n<li><strong>Objects</strong> 判定为 <strong>true</strong></li>\n<li><strong>Undefined</strong> 判定为 <strong>false</strong></li>\n<li><strong>Null</strong> 判定为 <strong>false</strong></li>\n<li><strong>Booleans</strong> 判定为 <strong>the value of the boolean</strong></li>\n<li><strong>Numbers</strong> 如果为 <strong>+0, -0, or NaN</strong> 判定为 <strong>false</strong>，否则为 <strong>true</strong></li>\n<li><strong>Strings</strong> 如果为 空字符串 <code>&#39;&#39;</code> 判定为 <strong>false</strong> 否则为 <strong>true</strong></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ([<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// true</span></span><br><span class=\"line\">  <span class=\"comment\">// 数组也是对象，对象都判定为true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>善于简写</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (name !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (name) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (collection.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (collection.length) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更多信息请查看Angus Croll所著的 <a href=\"http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108\" target=\"_blank\" rel=\"noopener\">Truth Equality and JavaScript</a> </p>\n</li>\n</ul>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><ul>\n<li><p>在所有多行代码块时都是用大括号</p>\n</li>\n<li><p>Use braces with all multi-line blocks.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (test) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><ul>\n<li><p>使用<code>/**....*/</code>包裹多行注释，这种注释包括描述、参数及返回值的类型和值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"comment\">// make() returns a new element</span></span><br><span class=\"line\"><span class=\"comment\">// based on the passed in tag name</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// @param &lt;String&gt; tag</span></span><br><span class=\"line\"><span class=\"comment\">// @return &lt;Element&gt; element</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">make</span>(<span class=\"params\">tag</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> element;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * make() returns a new element</span></span><br><span class=\"line\"><span class=\"comment\"> * based on the passed in tag name</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>&lt;String&gt; tag</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return </span>&lt;Element&gt; element</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">make</span>(<span class=\"params\">tag</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> element;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>单行注释时使用<code>//</code>。每一个单行注释在需要注释的位置上面新启一行。并在注释前加一个空行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> active = <span class=\"literal\">true</span>;  <span class=\"comment\">// is current tab</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"comment\">// is current tab</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> active = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'fetching type...'</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 设定默认值为'no type'</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> type = <span class=\"keyword\">this</span>._type || <span class=\"string\">'no type'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> type;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'fetching type...'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 设定默认值为'no type'</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> type = <span class=\"keyword\">this</span>._type || <span class=\"string\">'no type'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> type;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在注释前增加<code>FIXME</code>或<code>TODO</code>来帮助其他开发者快速理解这里出现了一个问题或是需要提供实现。这种注释和常规的注释不同，它是可操作的。这些操作为<code>FIXME -- 需要弄清楚</code>或是<code>TODO -- 需要添加实现</code></p>\n</li>\n<li><p>使用 <code>// FIXME:</code> 来标注问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Calculator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// <span class=\"doctag\">FIXME:</span> 这里不应该有全局变量</span></span><br><span class=\"line\">  total = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用 <code>// TODO:</code> 来标注问题的解法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Calculator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// <span class=\"doctag\">TODO:</span> total应该通过参数来配置</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.total = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"空格\"><a href=\"#空格\" class=\"headerlink\" title=\"空格\"></a>空格</h2><ul>\n<li><p>将TAB设置成两个空格</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">∙∙∙∙<span class=\"keyword\">var</span> name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">∙<span class=\"keyword\">var</span> name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">∙∙<span class=\"keyword\">var</span> name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在大括号前加个空格</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">dog.set(<span class=\"string\">'attr'</span>,&#123;</span><br><span class=\"line\">  age: <span class=\"string\">'1 year'</span>,</span><br><span class=\"line\">  breed: <span class=\"string\">'Bernese Mountain Dog'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">dog.set(<span class=\"string\">'attr'</span>, &#123;</span><br><span class=\"line\">  age: <span class=\"string\">'1 year'</span>,</span><br><span class=\"line\">  breed: <span class=\"string\">'Bernese Mountain Dog'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在操作符旁边加上空格</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x=y+<span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = y + <span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以一个换行符结束文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">global</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;)(<span class=\"keyword\">this</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">global</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;)(<span class=\"keyword\">this</span>);↵</span><br><span class=\"line\">↵</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">global</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;)(<span class=\"keyword\">this</span>);↵</span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n<li><p>为长的链式方法调用增加缩进</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">$(<span class=\"string\">'#items'</span>).find(<span class=\"string\">'.selected'</span>).highlight().end().find(<span class=\"string\">'.open'</span>).updateCount();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">$(<span class=\"string\">'#items'</span>)</span><br><span class=\"line\">  .find(<span class=\"string\">'.selected'</span>)</span><br><span class=\"line\">    .highlight()</span><br><span class=\"line\">    .end()</span><br><span class=\"line\">  .find(<span class=\"string\">'.open'</span>)</span><br><span class=\"line\">    .updateCount();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> leds = stage.selectAll(<span class=\"string\">'.led'</span>).data(data).enter().append(<span class=\"string\">'svg:svg'</span>).class(<span class=\"string\">'led'</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">'width'</span>,  (radius + margin) * <span class=\"number\">2</span>).append(<span class=\"string\">'svg:g'</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + (radius + margin) + <span class=\"string\">','</span> + (radius + margin) + <span class=\"string\">')'</span>)</span><br><span class=\"line\">    .call(tron.led);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> leds = stage.selectAll(<span class=\"string\">'.led'</span>)</span><br><span class=\"line\">    .data(data)</span><br><span class=\"line\">  .enter().append(<span class=\"string\">'svg:svg'</span>)</span><br><span class=\"line\">    .class(<span class=\"string\">'led'</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">'width'</span>,  (radius + margin) * <span class=\"number\">2</span>)</span><br><span class=\"line\">  .append(<span class=\"string\">'svg:g'</span>)</span><br><span class=\"line\">    .attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + (radius + margin) + <span class=\"string\">','</span> + (radius + margin) + <span class=\"string\">')'</span>)</span><br><span class=\"line\">    .call(tron.led);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"逗号\"><a href=\"#逗号\" class=\"headerlink\" title=\"逗号\"></a>逗号</h2><ul>\n<li><p>以逗号启始: <strong>不</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hero = &#123;</span><br><span class=\"line\">    firstName: <span class=\"string\">'Bob'</span></span><br><span class=\"line\">  , <span class=\"attr\">lastName</span>: <span class=\"string\">'Parr'</span></span><br><span class=\"line\">  , <span class=\"attr\">heroName</span>: <span class=\"string\">'Mr. Incredible'</span></span><br><span class=\"line\">  , <span class=\"attr\">superPower</span>: <span class=\"string\">'strength'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hero = &#123;</span><br><span class=\"line\">  firstName: <span class=\"string\">'Bob'</span>,</span><br><span class=\"line\">  lastName: <span class=\"string\">'Parr'</span>,</span><br><span class=\"line\">  heroName: <span class=\"string\">'Mr. Incredible'</span>,</span><br><span class=\"line\">  superPower: <span class=\"string\">'strength'</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在结尾加上逗号：<em>不</em>。这将在IE6/7和IE9的怪异模式中引发一些问题。而且，如果在数组中这么做，在一些ES3的实现中会增加数组的长度。这在ES5中做了修正(<a href=\"http://es5.github.io/#D\" target=\"_blank\" rel=\"noopener\">source</a>)：</p>\n<blockquote>\n<p>Edition 5 clarifies the fact that a trailing comma at the end of an ArrayInitialiser does not add to the length of the array. This is not a semantic change from Edition 3 but some implementations may have previously misinterpreted this.</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hero = &#123;</span><br><span class=\"line\">  firstName: <span class=\"string\">'Kevin'</span>,</span><br><span class=\"line\">  lastName: <span class=\"string\">'Flynn'</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> heroes = [</span><br><span class=\"line\">  <span class=\"string\">'Batman'</span>,</span><br><span class=\"line\">  <span class=\"string\">'Superman'</span>,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hero = &#123;</span><br><span class=\"line\">  firstName: <span class=\"string\">'Kevin'</span>,</span><br><span class=\"line\">  lastName: <span class=\"string\">'Flynn'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> heroes = [</span><br><span class=\"line\">  <span class=\"string\">'Batman'</span>,</span><br><span class=\"line\">  <span class=\"string\">'Superman'</span></span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<h2 id=\"分号\"><a href=\"#分号\" class=\"headerlink\" title=\"分号\"></a>分号</h2><ul>\n<li><p>永远使用分号</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'Skywalker'</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> name</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'Skywalker'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">;(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'Skywalker'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<h2 id=\"类型转换和强制类型转换\"><a href=\"#类型转换和强制类型转换\" class=\"headerlink\" title=\"类型转换和强制类型转换\"></a>类型转换和强制类型转换</h2><ul>\n<li><p>在声明开头进行强制类型转换</p>\n</li>\n<li><p>字符串:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  =&gt; this.reviewScore = 9;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> totalScore = <span class=\"keyword\">this</span>.reviewScore + <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> totalScore = <span class=\"string\">''</span> + <span class=\"keyword\">this</span>.reviewScore;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> totalScore = <span class=\"string\">''</span> + <span class=\"keyword\">this</span>.reviewScore + <span class=\"string\">' total score'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> totalScore = <span class=\"keyword\">this</span>.reviewScore + <span class=\"string\">' total score'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用 <code>parseInt</code> 转换成数字并总是加上进制数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> inputValue = <span class=\"string\">'4'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(inputValue);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = +inputValue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = inputValue &gt;&gt; <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = <span class=\"built_in\">parseInt</span>(inputValue);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = <span class=\"built_in\">Number</span>(inputValue);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = <span class=\"built_in\">parseInt</span>(inputValue, <span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果你出于某种原因做一些非常规的需求且<code>parseInt</code>是你性能的瓶颈，必须用位操作<a href=\"http://jsperf.com/coercion-vs-casting/3\" target=\"_blank\" rel=\"noopener\">提升性能</a>时，添加注释来解释为什么这么做、到底做了什么。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * parseInt是性能不佳的原因</span></span><br><span class=\"line\"><span class=\"comment\"> * 位操作强制将一个String转换为Number要快得多</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> val = inputValue &gt;&gt; <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>注意:</strong> 使用位操作时需要注意。所有的数字都是<a href=\"http://es5.github.io/#x4.3.19\" target=\"_blank\" rel=\"noopener\">64位浮点型</a>，但位操作经常返回32位整型（<a href=\"http://es5.github.io/#x11.7\" target=\"_blank\" rel=\"noopener\">请看</a>）。位操作会在值大于32位时发生一些问题。<a href=\"https://github.com/airbnb/javascript/issues/109\" target=\"_blank\" rel=\"noopener\">这里有一些关于此的讨论</a>。最大的有符号整型是 2,147,483,647</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2147483647</span> &gt;&gt; <span class=\"number\">0</span> <span class=\"comment\">//=&gt; 2147483647</span></span><br><span class=\"line\"><span class=\"number\">2147483648</span> &gt;&gt; <span class=\"number\">0</span> <span class=\"comment\">//=&gt; -2147483648</span></span><br><span class=\"line\"><span class=\"number\">2147483649</span> &gt;&gt; <span class=\"number\">0</span> <span class=\"comment\">//=&gt; -2147483647</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>布尔类型:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasAge = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(age);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasAge = <span class=\"built_in\">Boolean</span>(age);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasAge = !!age;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"命名约定\"><a href=\"#命名约定\" class=\"headerlink\" title=\"命名约定\"></a>命名约定</h2><ul>\n<li><p>避免单字母的命名。命名应该能够自解释</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">q</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...stuff...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">query</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ..stuff..</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在命名对象、函数和实例的时候使用驼峰命名法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> OBJEcttsssss = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> this_is_my_object = &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> u = <span class=\"keyword\">new</span> user(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Bob Parr'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> thisIsMyObject = &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thisIsMyFunction</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> user = <span class=\"keyword\">new</span> User(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Bob Parr'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在命名构造函数和类时使用帕斯卡构造法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">user</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = options.name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> bad = <span class=\"keyword\">new</span> user(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'nope'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = options.name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> good = <span class=\"keyword\">new</span> User(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'yup'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>命名私有属性时添加<code>_</code>前缀</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.__firstName__ = <span class=\"string\">'Panda'</span>;</span><br><span class=\"line\"><span class=\"keyword\">this</span>.firstName_ = <span class=\"string\">'Panda'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>._firstName = <span class=\"string\">'Panda'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当需要保存一个<code>this</code>的引用时，使用<code>_this</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(self);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(that);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _this = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(_this);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>总是为函数命名，这样有助于栈的追踪</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> log = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(msg);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> log = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">log</span>(<span class=\"params\">msg</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(msg);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"访问器\"><a href=\"#访问器\" class=\"headerlink\" title=\"访问器\"></a>访问器</h2><ul>\n<li><p>一般不需要属性的访问器函数</p>\n</li>\n<li><p>如果要创造属性的访问器函数，使用 getVal() 和 setVal(‘hello’)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">dragon.age();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">dragon.getAge();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">dragon.age(<span class=\"number\">25</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">dragon.setAge(<span class=\"number\">25</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果属性时布尔类型，使用 isVal() 或 hasVal()</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!dragon.age()) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!dragon.hasAge()) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以创建 get() 和 set() 方法，但必须一致</p>\n</li>\n<li><p>It’s okay to create get() and set() functions, but be consistent.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Jedi</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  options || (options = &#123;&#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> lightsaber = options.lightsaber || <span class=\"string\">'blue'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.set(<span class=\"string\">'lightsaber'</span>, lightsaber);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.set = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key, val</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>[key] = val;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.get = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>[key];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h2><ul>\n<li><p>给构造函数的prototype对象增加新方法，不要直接给prototype重写一个新的对象。重写prototype对象会导致无法继承：重写prototype将覆盖掉基类。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Jedi</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'new jedi'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">Jedi.prototype = &#123;</span><br><span class=\"line\">  fight: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'fighting'</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  block: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">block</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'blocking'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">Jedi.prototype.fight = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'fighting'</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.block = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">block</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'blocking'</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以为方法返回<code>this</code>方便链式调用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">Jedi.prototype.jump = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.jumping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.setHeight = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">height</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> luke = <span class=\"keyword\">new</span> Jedi();</span><br><span class=\"line\">luke.jump(); <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\">luke.setHeight(<span class=\"number\">20</span>) <span class=\"comment\">// =&gt; undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 推荐</span></span><br><span class=\"line\">Jedi.prototype.jump = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.jumping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.setHeight = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">height</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> luke = <span class=\"keyword\">new</span> Jedi();</span><br><span class=\"line\"></span><br><span class=\"line\">luke.jump()</span><br><span class=\"line\">  .setHeight(<span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<ul>\n<li><p>可以重写toString()方法，只要它能正常工作且不会有副作用就行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Jedi</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  options || (options = &#123;&#125;);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = options.name || <span class=\"string\">'no name'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Jedi.prototype.toString = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'Jedi - '</span> + <span class=\"keyword\">this</span>.getName();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><strong>推荐的书籍</strong></p>\n<ul>\n<li><a href=\"http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742\" target=\"_blank\" rel=\"noopener\">JavaScript语言精粹</a> - Douglas Crockford</li>\n<li><a href=\"http://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752\" target=\"_blank\" rel=\"noopener\">JavaScript模式</a> - Stoyan Stefanov</li>\n<li><a href=\"http://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X\" target=\"_blank\" rel=\"noopener\">JavaScript设计模式</a>  - Ross Harmes and Dustin Diaz</li>\n<li><a href=\"http://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309\" target=\"_blank\" rel=\"noopener\">高性能网站建设指南</a> - Steve Souders</li>\n<li><a href=\"http://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680\" target=\"_blank\" rel=\"noopener\">编写可维护的JavaScript</a> - Nicholas C. Zakas</li>\n<li><a href=\"http://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X\" target=\"_blank\" rel=\"noopener\">JavaScript Web 富应用开发</a> - Alex MacCaw</li>\n<li><a href=\"http://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273\" target=\"_blank\" rel=\"noopener\">Pro JavaScript Techniques</a> - John Resig</li>\n<li><a href=\"http://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595\" target=\"_blank\" rel=\"noopener\">Smashing Node.js: JavaScript Everywhere</a> - Guillermo Rauch</li>\n<li><a href=\"http://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X\" target=\"_blank\" rel=\"noopener\">Secrets of the JavaScript Ninja</a> - John Resig and Bear Bibeault</li>\n<li><a href=\"http://humanjavascript.com\" target=\"_blank\" rel=\"noopener\">Human JavaScript</a> - Henrik Joreteg</li>\n<li><a href=\"http://superherojs.com\" target=\"_blank\" rel=\"noopener\">Superhero.js</a> - Kim Joar Bekkelund, Mads Mobæk, &amp; Olav Bjorkoy</li>\n<li><a href=\"http://jsbooks.revolunet.com\" target=\"_blank\" rel=\"noopener\">JSBooks</a></li>\n<li><a href=\"http://manning.com/vinegar\" target=\"_blank\" rel=\"noopener\">Third Party JavaScript</a> - Ben Vinegar and Anton Kovalyov</li>\n</ul>\n<p><strong>推荐的博客</strong></p>\n<ul>\n<li><a href=\"http://dailyjs.com\" target=\"_blank\" rel=\"noopener\">DailyJS</a></li>\n<li><a href=\"http://javascriptweekly.com\" target=\"_blank\" rel=\"noopener\">JavaScript Weekly</a></li>\n<li><a href=\"http://javascriptweblog.wordpress.com\" target=\"_blank\" rel=\"noopener\">JavaScript, JavaScript…</a></li>\n<li><a href=\"http://weblog.bocoup.com\" target=\"_blank\" rel=\"noopener\">Bocoup Weblog</a></li>\n<li><a href=\"http://www.adequatelygood.com\" target=\"_blank\" rel=\"noopener\">Adequately Good</a></li>\n<li><a href=\"http://www.nczonline.net\" target=\"_blank\" rel=\"noopener\">NCZOnline</a></li>\n<li><a href=\"http://perfectionkills.com\" target=\"_blank\" rel=\"noopener\">Perfection Kills</a></li>\n<li><a href=\"http://benalman.com\" target=\"_blank\" rel=\"noopener\">Ben Alman</a></li>\n<li><a href=\"http://dmitry.baranovskiy.com\" target=\"_blank\" rel=\"noopener\">Dmitry Baranovskiy</a></li>\n<li><a href=\"http://dustindiaz.com\" target=\"_blank\" rel=\"noopener\">Dustin Diaz</a></li>\n<li><a href=\"http://net.tutsplus.com/?s=javascript\" target=\"_blank\" rel=\"noopener\">nettuts</a></li>\n</ul>\n<h2 id=\"JavaScript风格指南\"><a href=\"#JavaScript风格指南\" class=\"headerlink\" title=\"JavaScript风格指南\"></a>JavaScript风格指南</h2><ul>\n<li><a href=\"https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide\" target=\"_blank\" rel=\"noopener\">查看</a></li>\n</ul>\n<h2 id=\"项目贡献者\"><a href=\"#项目贡献者\" class=\"headerlink\" title=\"项目贡献者\"></a>项目贡献者</h2><ul>\n<li><a href=\"https://github.com/airbnb/javascript/graphs/contributors\" target=\"_blank\" rel=\"noopener\">查看贡献者</a></li>\n</ul>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>MIT</p>\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"};\"></a>};</h1>"}