{"tags":[{"name":"JavaScript","permalink":"http://lingyu.life/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":28},{"name":"jQuery","permalink":"http://lingyu.life/tags/jQuery/","url":"/async/tags/jQuery.json","count":1}],"categories":[{"name":"JS技术","permalink":"http://lingyu.life/categories/JS%E6%8A%80%E6%9C%AF/","url":"/async/categories/JS技术.json","count":12}],"url":"/async/posts/2014/01/28/jquery-resize.json","date":1390838400000,"path":{"year":2014,"month":1,"day":28,"name":"jquery-resize"},"subtitle":"使用jQuery实现","title":"使用jQuery监听DOM元素大小变化","permalink":"http://lingyu.life/2014/01/28/jquery-resize/","content":"<p>今天写页面的时候突然有这么个需求，由于父元素（一个DIV）的height是由javascript计算出来的固定的值，而在其中增加了一个多说插件，在用户评论后，子元素（DIV）的height属性增加，导致子元素溢出。但是又不知道如何为多说的评论按钮增加回调函数，于是乎就想到了根据子元素的大小变化来重新计算父元素的height。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h3><p>今天写页面的时候突然有这么个需求，由于父元素（一个DIV）的height是由javascript计算出来的固定的值，而在其中增加了一个多说插件，在用户评论后，子元素（DIV）的height属性增加，导致子元素溢出。但是又不知道如何为多说的评论按钮增加回调函数，于是乎就想到了根据子元素的大小变化来重新计算父元素的height。</p>\n<h3 id=\"onresize\"><a href=\"#onresize\" class=\"headerlink\" title=\"onresize?\"></a>onresize?</h3><p>平常，都是在整个浏览器窗口变化时触发一个修改布局的回调函数。使用的是window对象的resize事件，利用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onresize = callback;</span><br></pre></td></tr></table></figure>\n<p>来绑定。但根据resize事件的target是<code>defaultView (window)</code>，这里详见<a href=\"https://developer.mozilla.org/en-US/docs/Web/Reference/Events/resize\" target=\"_blank\" rel=\"noopener\">MDN的resize文档</a>，也就是说只有window对象有resize事件，于是乎就想到使用jQuery自己的事件机制来模拟一个普通元素上的resize事件</p>\n<h3 id=\"使用jQuery事件的实现思路\"><a href=\"#使用jQuery事件的实现思路\" class=\"headerlink\" title=\"使用jQuery事件的实现思路\"></a>使用jQuery事件的实现思路</h3><p>可以想到一种比较简单的方式：</p>\n<ol>\n<li>在元素绑定resize对象时，记录元素的width和height</li>\n<li>使用requestAnimationFrame、setTimeout、setInterval，每隔一段时间查询其width和height，如果和记录的width和height不一样，运行回调函数并更新记录中的width为height</li>\n</ol>\n<h3 id=\"jQuery插件\"><a href=\"#jQuery插件\" class=\"headerlink\" title=\"jQuery插件\"></a>jQuery插件</h3><p>这个功能Ben Alman编写了一个jQuery插件，<a href=\"http://benalman.com/projects/jquery-resize-plugin\" target=\"_blank\" rel=\"noopener\">这是传送门</a><br>该插件的代码（核心部分），详细代码请查看<a href=\"https://raw.github.com/cowboy/jquery-resize/v1.1/jquery.ba-resize.js\" target=\"_blank\" rel=\"noopener\">Ben Alman博客</a>的内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$, window, undefined</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> elems = $([]),</span><br><span class=\"line\">    jq_resize = $.resize = $.extend($.resize, &#123;&#125;),</span><br><span class=\"line\">    timeout_id,</span><br><span class=\"line\">    str_setTimeout = <span class=\"string\">'setTimeout'</span>,</span><br><span class=\"line\">    str_resize = <span class=\"string\">'resize'</span>,</span><br><span class=\"line\">    str_data = str_resize + <span class=\"string\">'-special-event'</span>,</span><br><span class=\"line\">    str_delay = <span class=\"string\">'delay'</span>,</span><br><span class=\"line\">    str_throttle = <span class=\"string\">'throttleWindow'</span>;</span><br><span class=\"line\">  jq_resize[str_delay] = <span class=\"number\">250</span>;</span><br><span class=\"line\">  jq_resize[str_throttle] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  $.event.special[str_resize] = &#123;</span><br><span class=\"line\">    setup: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!jq_resize[str_throttle] &amp;&amp; <span class=\"keyword\">this</span>[str_setTimeout]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> elem = $(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">      elems = elems.add(elem);</span><br><span class=\"line\">      $.data(<span class=\"keyword\">this</span>, str_data, &#123;</span><br><span class=\"line\">        w: elem.width(),</span><br><span class=\"line\">        h: elem.height()</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (elems.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        loopy();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    teardown: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!jq_resize[str_throttle] &amp;&amp; <span class=\"keyword\">this</span>[str_setTimeout]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> elem = $(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">      elems = elems.not(elem);</span><br><span class=\"line\">      elem.removeData(str_data);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!elems.length) &#123;</span><br><span class=\"line\">        clearTimeout(timeout_id);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    add: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">handleObj</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!jq_resize[str_throttle] &amp;&amp; <span class=\"keyword\">this</span>[str_setTimeout]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> old_handler;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new_handler</span>(<span class=\"params\">e, w, h</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> elem = $(<span class=\"keyword\">this</span>),</span><br><span class=\"line\">          data = $.data(<span class=\"keyword\">this</span>, str_data);</span><br><span class=\"line\">        data.w = w !== <span class=\"literal\">undefined</span> ? w : elem.width();</span><br><span class=\"line\">        data.h = h !== <span class=\"literal\">undefined</span> ? h : elem.height();</span><br><span class=\"line\">        old_handler.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($.isFunction(handleObj)) &#123;</span><br><span class=\"line\">        old_handler = handleObj;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> new_handler;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        old_handler = handleObj.handler;</span><br><span class=\"line\">        handleObj.handler = new_handler;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loopy</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    timeout_id = <span class=\"built_in\">window</span>[str_setTimeout](<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      elems.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> elem = $(<span class=\"keyword\">this</span>),</span><br><span class=\"line\">          width = elem.width(),</span><br><span class=\"line\">          height = elem.height(),</span><br><span class=\"line\">          data = $.data(<span class=\"keyword\">this</span>, str_data);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (width !== data.w || height !== data.h) &#123;</span><br><span class=\"line\">          elem.trigger(str_resize, [data.w = width, data.h = height]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      loopy();</span><br><span class=\"line\">    &#125;, jq_resize[str_delay]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(jQuery, <span class=\"keyword\">this</span>);</span><br></pre></td></tr></table></figure>\n<p>jQuery为jQuery插件的开发者提供了添加自定义事件的接口，详细可以参考<a href=\"http://learn.jquery.com/events/event-extensions\" target=\"_blank\" rel=\"noopener\">jQuery官方文档</a>，这里就是典型的jQuery自定义事件添加方式，其中有三个钩子：</p>\n<ol>\n<li>setup：<code>The setup hook is called the first time an event of a particular type is attached to an element.</code>首次绑定时执行，如果返回 false，使用默认方式绑定事件</li>\n<li>teardown：<code>The teardown hook is called when the final event of a particular type is removed from an element.</code>若指定该方法，其在移除事件处理程序(removeEventListener)前执行，如果返回 false，移除默认绑定事件</li>\n<li>add：<code>Each time an event handler is added to an element through an API such as .on(), jQuery calls this hook.</code>每一次给元素绑定事件，都会执行这个方法</li>\n</ol>\n<p>setup、teardown和add三个钩子，每个钩子最先做的事都是检测是否该对象为window对象，然后根据window对象特殊处理，因为window对象本身有resize事件</p>\n<p>从setup钩子可以看到，在初始化整个事件处理时，创建一个元素队列，队列中的每隔元素都把width和height放在data中，然后每隔250ms启动loopy函数，在loopy函数中判断是否变化，如果有变，触发回调函数并更新data中的width和height</p>\n<p>从teardown钩子可以看到，在元素移除事件时，只需要将元素从元素队列移除，并清除元素中的data数据。如果是元素队列中的最后一个元素，则不再继续执行loopy</p>\n<p>add钩子中，对回调函数进行了包装</p>\n<p>由此可以看到一个简单的jQuery自定义函数的实现机制</p>\n"}