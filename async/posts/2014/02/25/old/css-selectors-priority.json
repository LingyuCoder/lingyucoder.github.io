{"tags":[{"name":"CSS","permalink":"http://lingyu.life/tags/CSS/","url":"/async/tags/CSS.json","count":30}],"categories":[{"name":"CSS","permalink":"http://lingyu.life/categories/CSS/","url":"/async/categories/CSS.json","count":8}],"url":"/async/posts/2014/02/25/old/css-selectors-priority.json","date":1393257600000,"path":{"year":2014,"month":2,"day":25,"name":"old/css-selectors-priority"},"subtitle":"记录CSS优先级计算的规则，再也不用害怕面试官问了","title":"CSS优先级备忘","permalink":"http://lingyu.life/2014/02/25/old/css-selectors-priority/","content":"<h2 id=\"常规优先级计算\"><a href=\"#常规优先级计算\" class=\"headerlink\" title=\"常规优先级计算\"></a>常规优先级计算</h2><p>一个选择器的优先级是由如下方式计算的：</p>\n<ul>\n<li>通配符（<code>*</code>）的权重为0</li>\n<li>元素选择器(<code>div</code>)、伪元素(<code>::before</code>)的权重为1</li>\n<li>类型选择器(<code>.className</code>)、属性选择器(<code>[someAttr=someValue]</code>)、伪类选择器(<code>:hover</code>)的权重为10</li>\n<li>id选择器（<code>#</code>）的权重为100</li>\n<li>内联样式（HTML中的<code>style=&quot;blahblah&quot;</code>）为1000</li>\n<li>如果权重一样，后声明的优先</li>\n</ul>\n<p>需要注意的是这里的10、100、1000并不是十进制的，进制数很大，在W3C上的原话： Concatenating the three numbers a-b-c (in a number system with a large base) gives the specificity.</p>\n<p>确定伪元素有哪些：</p>\n<ul>\n<li>first-letter</li>\n<li>first-line</li>\n<li>before</li>\n<li>after</li>\n</ul>\n<p>确伪类有哪些：</p>\n<ul>\n<li>active</li>\n<li>focus</li>\n<li>hover</li>\n<li>link</li>\n<li>visited</li>\n<li>first-child</li>\n<li>lang</li>\n</ul>\n<p>需要注意的是伪类和伪元素的差别，伪类的优先级要高于伪元素。伪元素一般使用<code>::first-letter</code>，前面两个冒号，而伪类只有一个。但目前已知处于相互混淆的状态。用一个也是可以的。同时很多人将<code>::before</code>和<code>::after</code>也一起称为伪类，更加混淆了伪类和伪元素。虽然平常使用的时候差别并不大，但在计算优先级权重的时候还是有差别的，需要注意。</p>\n<h2 id=\"特殊规则\"><a href=\"#特殊规则\" class=\"headerlink\" title=\"特殊规则\"></a>特殊规则</h2><p>###!important永远覆盖其他<br>当!important规则被用在一个样式声明中，这个样式声明会覆盖任何其他声明，无论在声明列表的那个位置，与优先级无关</p>\n<p>如下例所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"outer\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:red\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是outer中的一段文字<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后加上outer类的样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.outer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最终结果:</p>\n<p><img src=\"/img/selector_priority/1.png\" alt=\"结果\"></p>\n<p>可见!important凌驾于一切之上</p>\n<p>###:not伪类的优先级为0<br>需要注意的是伪类的优先级为0，比如如下例子：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"outer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是outer中的文本，不属于inner<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inner\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是inner中的文本<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>给其添加样式如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:not(.outer)</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.outer</span> <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结果如图：</p>\n<p><img src=\"/img/selector_priority/2.png\" alt=\"结果\"></p>\n<p>可以看到，outer的color属性为red，很好理解</p>\n<p>但inner的color也是red，可以检索一下元素发现：</p>\n<p><img src=\"/img/selector_priority/3.png\" alt=\"结果\"></p>\n<p>两个样式都被用在了inner上了，但<code>div.outer p</code>被最终采用。说明<code>div:not(.outer) p</code>的优先级不会大于<code>div.outer p</code>。</p>\n<p>接下来给两个样式换个顺序：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.outer</span> <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:not(.outer)</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>F5看看输出效果，inner的color属性变成green了</p>\n<p><img src=\"/img/selector_priority/4.png\" alt=\"结果\"></p>\n<p>由此可以看出<code>div.outer p</code>的优先级也不会大于<code>div:not(.outer) p</code>。这俩优先级一样，会按照最后声明的样式进行加载。这也充分证明了<code>:not</code>伪类是没有优先级的</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/CSS/Specificity\" target=\"_blank\" rel=\"noopener\">MDN的CSS优先级文章</a></p>\n<p><a href=\"http://www.w3.org/TR/selectors/#specificity\" target=\"_blank\" rel=\"noopener\">CSS3 Selectors Specificity</a></p>\n"}