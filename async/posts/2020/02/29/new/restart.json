{"tags":[{"name":"杂谈","permalink":"http://lingyu.life/tags/%E6%9D%82%E8%B0%88/","url":"/async/tags/杂谈.json","count":6}],"categories":[{"name":"杂谈","permalink":"http://lingyu.life/categories/%E6%9D%82%E8%B0%88/","url":"/async/categories/杂谈.json","count":8}],"url":"/async/posts/2020/02/29/new/restart.json","date":1582905600000,"path":{"year":2020,"month":2,"day":29,"name":"new/restart"},"title":"关于博客重启","permalink":"http://lingyu.life/2020/02/29/new/restart/","content":"<p>经过5年的沉寂，我决定在2020年2月的最后一天，决定把早已经挂掉的博客重启</p>\n<a id=\"more\"></a>\n\n<h2 id=\"拥抱变化\"><a href=\"#拥抱变化\" class=\"headerlink\" title=\"拥抱变化\"></a>拥抱变化</h2><p>从毕业入职到现在约有5年了，在这5年的过程中先后主要负责天猫商品、天猫搜索、手猫导购业务等。从PC到Mobile，从2B到2C，中间还做了诸如双十一狂欢城这样的互动业务，也做过天猫基础工具链、稳定性告警平台这样的前端基础能力工作。在这几年里，拥抱了不少变化，和不少其他岗位的人又合作，也接触到很多之前从未接触到的领域，收获还是非常多的。</p>\n<p>而这几年没有怎么更新博客，主要问题有几个：</p>\n<ol>\n<li>确实业务比较忙，写文章是个非常耗时耗力的过程，保障文章内容的完整性和准确性需要很多时间</li>\n<li>接触了很多大牛，觉得自己在这个领域做的事情很浅显，容易被别人鄙视</li>\n<li>内网其实我也沉淀了一些文章，但由于多多少少和内网的系统强相关，所以没有办法发布到外网</li>\n<li>域名到期被不知道谁给注册了，而且云存储啥的都出现问题，网站挂掉就懒得弄了</li>\n</ol>\n<p>那我为什么现在又要把博客重启呢？说白了还是<strong>输出倒逼输入</strong>。</p>\n<p>最近一年拥抱了不少变化，跟着组织架构调整先后换了好几个团队。从半技术半业务的团队，换到了纯业务团队。而在这些变化的过程中，手上的业务负担也是越来越重，输入学习的时间越来越少。于是乎不断的寻找方法来打破这个局，也因此有了一些思考。</p>\n<h2 id=\"沿途的风景\"><a href=\"#沿途的风景\" class=\"headerlink\" title=\"沿途的风景\"></a>沿途的风景</h2><p>之前有明确的目标，一路走来却发现在这过程中，做过的事情、做过的项目，并不只是PPT上的一页成果，而应该成为自己技术壁垒的一块青砖。在这其中非常重要的点是<strong>结构化和体系化</strong>。</p>\n<p>拿之前做天猫基础工具链举例，在做的过程中，我主要是一些功能点怎么实现：</p>\n<ul>\n<li>项目如何初始化</li>\n<li>怎么做资源代理</li>\n<li>怎么构建</li>\n<li>怎么做请求转发</li>\n<li>等等等等</li>\n</ul>\n<p>最后也做上去了，服务了整个天猫业务。但后来淘系合并，这一套工具链就被废弃掉了。</p>\n<p>这里拿我做这套工具链的过程来说明一下结构化和体系化。</p>\n<h3 id=\"结构化\"><a href=\"#结构化\" class=\"headerlink\" title=\"结构化\"></a>结构化</h3><p>废弃掉之后，站在我个人角度而言，在这过程中，各个功能点其实都是离散的，看起来并没有太多交集。我参与了工具链的开发，确实积累了一些工具链开发的经验，但也仅限如此了。假如真让我去做一个前端自动化平台的TL带着团队搞，必然是会蒙圈的。核心问题在于，在过去做这套工具链的过程中，我并没有将整个工具链中的知识和思考提炼，将其中内在的关系汇聚在一起，形成产品思维，进而查漏补缺，将这个工具产品优化。</p>\n<p>比如构建，我专注于gulp和webpack的构建配置、以及各种插件的花式调用。但实际上，在不同构建器开发的过程中，可以找到构建器的通性——对一段某种规范的代码的转化，而站在代码转化的来思考时，就不只是构建这么简单了，编码的规范、目录的规范、资源的管理、依赖关系的管理、构建流程的差异化、构建产物的一致性和安全性等等其实都殖代码转化过程中需要考虑的内容。这其中大概遵循如下流程：</p>\n<ol>\n<li>将多个零散的点中的共性进行提炼，形成一个上层的理念</li>\n<li>在这个理念上进行思考，向下推导并穷举所有功能点</li>\n<li>找到缺失的功能点去补全完善</li>\n<li>然后将这个上层理念和其他理念进行共性提炼，重复1-3步，直至到达整个产品的核心理念</li>\n</ol>\n<p>最终通过这种方式，我们能够构建出一颗树，而这棵树就包含了整个产品的能力，以及每个部分满足的核心诉求。</p>\n<p>通过这种结构化的方式，我们就能将自己零散的知识汇聚起来，沉淀成为方法论，后续再遇到类似的问题，只需要稍稍对这棵树进行增加或删减，就足够了。</p>\n<h3 id=\"体系化\"><a href=\"#体系化\" class=\"headerlink\" title=\"体系化\"></a>体系化</h3><p>所以结构化是自底向上把零散的点组织起来，那体系化又怎么解释呢？所谓体系化，其实就是跳出所做的具体的事情，直接定义一个大的领域，然后自顶向下来推导，构建自己在这个领域的知识结构。</p>\n<p>还是刚才的工具链，我们跳出做工具链这个范畴，直接上升到前端工程化这个领域，工具链是这个领域的一环，但这个领域远远不止工具链。工具链能够实现本地开发流程的提效，但放眼整个前端工程化领域，还有很多方式能提效，也能解决本地开发存在的一些问题。比如通过建设统一的模块体系以实现模块复用，这其中就涉及到统一的模块规范、模块加载器实现、模块生命周期管理、模块分析等等的一体化平台。又或是采用云端构建发布的方案来规避本地开发流程中存在的一致性问题和安全性问题，这其中就涉及到资源管理、容器技术、代码分析校验、持续集成、多环境部署、服务协同等等。可以看到，当我们跳出来纵观整个体系的时候，肯定很多东西是在做单纯工具链所不会接触到的。</p>\n<p>总结下来就是，做了一件事情后，站在这个领域自顶向下看，补足自己不了解的部分，形成领域内知识的闭环，形成自己的一套领域解决方案，才能真正称之为这个领域的专家</p>\n<h2 id=\"回到重启博客这件事\"><a href=\"#回到重启博客这件事\" class=\"headerlink\" title=\"回到重启博客这件事\"></a>回到重启博客这件事</h2><p>结构化自底向上，依赖的是对所做之事的提炼和归纳。体系化自顶向下，依赖的是对所做领域的思考与深化。这两部分的前提，就是将自己的所做的事情，以及所想的理念，沉淀下来形成片段。然后定期将这些片段梳理，了解自身的长处和短板，针对性的去学习，才能实现知识闭环。而博客是最好的归纳及思考的土壤。</p>\n<h2 id=\"后续的计划\"><a href=\"#后续的计划\" class=\"headerlink\" title=\"后续的计划\"></a>后续的计划</h2><p>暂定是每1周有一篇文章的产出，包括但不限于所做之事的总结，所见之物的看法，所想之事的唠叨，包括但不限于技术、生活、游戏等等。如果周末确实有其他事，就顺延一周。另外搬运了几篇能放到外网的文章过来，后续纯技术类的文章和分享PPT都会同步到博客内。希望自己通过这种方式有所成长</p>\n"}