<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>天镶的博客</title>
  <icon>http://lingyu.life/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lingyu.life/"/>
  <updated>2020-03-07T15:17:28.440Z</updated>
  <id>http://lingyu.life/</id>
  
  <author>
    <name>天镶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用React做重构时的一些思考</title>
    <link href="http://lingyu.life/2015/08/30/chonggou/"/>
    <id>http://lingyu.life/2015/08/30/chonggou/</id>
    <published>2015-08-29T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.440Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;好久没写东西了，主要是工作比以前学生时代忙多了，周末也是各种加班充电，沉淀的少了。最近一直在用React对手上的老业务做重构，这里写一下重构中的一些感悟和思考&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端综合" scheme="http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E7%BB%BC%E5%90%88/"/>
    
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="React" scheme="http://lingyu.life/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>轻松入门React和Webpack</title>
    <link href="http://lingyu.life/2015/05/15/react-and-webpack/"/>
    <id>http://lingyu.life/2015/05/15/react-and-webpack/</id>
    <published>2015-05-14T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.929Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在学习React.js，之前都是直接用最原生的方式去写React代码，发现组织起来特别麻烦，之前听人说用Webpack组织React组件得心应手，就花了点时间学习了一下，收获颇丰&lt;/p&gt;
    
    </summary>
    
    
      <category term="JS技术" scheme="http://lingyu.life/categories/JS%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="React" scheme="http://lingyu.life/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>4月26日杂谈</title>
    <link href="http://lingyu.life/2015/04/26/sometalk-4-26/"/>
    <id>http://lingyu.life/2015/04/26/sometalk-4-26/</id>
    <published>2015-04-25T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:29.027Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本来今天打算继续写之前说要写的动画基础知识的，但是晚上玩了玩gitbook就忘掉了。现在也懒得组织了，就把最近写的一些小玩意梳理一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思考总结" scheme="http://lingyu.life/categories/%E6%80%9D%E8%80%83%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="思考" scheme="http://lingyu.life/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>前端动画对比</title>
    <link href="http://lingyu.life/2015/04/18/learn-canvas-1/"/>
    <id>http://lingyu.life/2015/04/18/learn-canvas-1/</id>
    <published>2015-04-17T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.928Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;将近三个月没写文章了，就在这三个月内，我从一只学生狗变成了上班族。现在一切都稳定下来了，决定重新开始写点东西了。以后的计划是每周一篇，努力坚持~&lt;/p&gt;
&lt;p&gt;之前玩了很长时间的Canvas动画，也写了一些工具和一些demo，放在了我Github上的&lt;a href=&quot;https://github.com/LingyuCoder/learn-canvas&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learn-canvas&lt;/a&gt;仓库里。在学习Canvas动画的过程中学到了不少宝贵的新知识，这篇主要是个人对于Canvas动画的一些想法以及与其他前端动画实现的一些对比。&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏开发" scheme="http://lingyu.life/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="Canvas" scheme="http://lingyu.life/tags/Canvas/"/>
    
      <category term="动画" scheme="http://lingyu.life/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="游戏" scheme="http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>读书破万卷，敲码别走神</title>
    <link href="http://lingyu.life/2015/01/26/18-books/"/>
    <id>http://lingyu.life/2015/01/26/18-books/</id>
    <published>2015-01-25T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.440Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;上一篇文章是去年十一月，时隔两个多月了，这段时间由于毕业论文上屁事太多，没有静下心来写文章做总结。虽然学了不少新姿势，但是一直没在博客上做记录，特地写点东西来清清灰。&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://lingyu.life/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="生活" scheme="http://lingyu.life/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>构建华丽UI的7条准则（上部）</title>
    <link href="http://lingyu.life/2014/11/24/7-rules-for-creating-gorgeous-ui-part-1/"/>
    <id>http://lingyu.life/2014/11/24/7-rules-for-creating-gorgeous-ui-part-1/</id>
    <published>2014-11-23T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.440Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自Erik D. Kennedy的&lt;a href=&quot;https://medium.com/@erikdkennedy/7-rules-for-creating-gorgeous-ui-part-1-559d4e805cda?hn=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;7 Rules for Creating Gorgeous UI (Part 1)&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="设计" scheme="http://lingyu.life/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>RisingStack的Node.js风格指南</title>
    <link href="http://lingyu.life/2014/11/24/risingstack-nodejs-style-guide/"/>
    <id>http://lingyu.life/2014/11/24/risingstack-nodejs-style-guide/</id>
    <published>2014-11-23T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.931Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自&lt;a href=&quot;https://github.com/RisingStack/node-style-guide&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RisingStack/node-style-guide&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
  </entry>
  
  <entry>
    <title>Peertc和五子棋</title>
    <link href="http://lingyu.life/2014/11/18/peertc-and-fivechess/"/>
    <id>http://lingyu.life/2014/11/18/peertc-and-fivechess/</id>
    <published>2014-11-17T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.929Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天发现博客的分类错乱了。自己写的主题对一篇文章有多个分类的情况处理效果不好，所以就把文章的分类重新弄了一下。然后看了看归档发现这个月还没写过东西，于是乎决定写这么一篇文章介绍一下Peertc，以及使用它实现一个对战的五子棋。下载地址：&lt;a href=&quot;https://github.com/LingyuCoder/peertc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Peertc&lt;/a&gt;、&lt;a href=&quot;https://github.com/LingyuCoder/FiveChess&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;五子棋&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="即时通信" scheme="http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="WebIM" scheme="http://lingyu.life/tags/WebIM/"/>
    
      <category term="WebRTC" scheme="http://lingyu.life/tags/WebRTC/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="Canvas" scheme="http://lingyu.life/tags/Canvas/"/>
    
      <category term="游戏" scheme="http://lingyu.life/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="算法" scheme="http://lingyu.life/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>使用WebRTC DataChannel在浏览器间传递数据</title>
    <link href="http://lingyu.life/2014/10/21/datachannel/"/>
    <id>http://lingyu.life/2014/10/21/datachannel/</id>
    <published>2014-10-20T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.440Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;WebRTC给我们带来了浏览器中的视频、音频聊天体验。但个人认为，它最实用的特性莫过于DataChannel——在浏览器之间建立一个点对点的数据通道。在DataChannel之前，浏览器到浏览器的数据传递通常是这样一个流程：浏览器1发送数据给服务器，服务器处理，服务器再转发给浏览器2。这三个过程都会带来相应的消耗，占用服务器带宽不说，还减缓了消息从发送到接收的时间。其实最理想的方式就是浏览器1直接与浏览2进行通信，服务器不需要参与其中。WebRTC DataChannel就提供了这样一种方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="即时通信" scheme="http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="WebSocket" scheme="http://lingyu.life/tags/WebSocket/"/>
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
      <category term="WebIM" scheme="http://lingyu.life/tags/WebIM/"/>
    
      <category term="WebRTC" scheme="http://lingyu.life/tags/WebRTC/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="DataChannel" scheme="http://lingyu.life/tags/DataChannel/"/>
    
  </entry>
  
  <entry>
    <title>Gulp思维 —— Gulp高级技巧</title>
    <link href="http://lingyu.life/2014/10/07/getting-gulpy/"/>
    <id>http://lingyu.life/2014/10/07/getting-gulpy/</id>
    <published>2014-10-06T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.447Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文翻译自&lt;a href=&quot;https://medium.com/@webprolific/getting-gulpy-a2010c13d3d5&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Getting gulpy – Advanced tips for using gulp.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;感受过&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gulp.js&lt;/a&gt;带来的兴奋过后，你需要的不仅仅是它的光鲜，而是切切实实的实例。这篇文章讨论了一些使用gulp.js时常踩的坑，以及一些更加高级和定制化的插件和流的使用技巧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="Gulp" scheme="http://lingyu.life/tags/Gulp/"/>
    
  </entry>
  
  <entry>
    <title>Gulp -- 项目的愿景、过去和将来</title>
    <link href="http://lingyu.life/2014/10/06/gulp-vision-history-future/"/>
    <id>http://lingyu.life/2014/10/06/gulp-vision-history-future/</id>
    <published>2014-10-05T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.448Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文翻译自&lt;a href=&quot;https://medium.com/@contrahacks/gulp-3828e8126466&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gulp – The vision, history, and future of the project&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;gulp是一个将vinyl、vinyl-fs、orchestrator、命令行工具以及一系列用于帮助开发者构建优秀插件的指导方针等集于一身的小巧构建工具。尽管它功能很少，但它却完全打破了构建工具生态体系，并通过许多优秀的项目掀起了一股改革你的工作流程的浪潮。&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="Gulp" scheme="http://lingyu.life/tags/Gulp/"/>
    
  </entry>
  
  <entry>
    <title>koa-anywhere</title>
    <link href="http://lingyu.life/2014/09/24/koa-anywhere/"/>
    <id>http://lingyu.life/2014/09/24/koa-anywhere/</id>
    <published>2014-09-23T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.928Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近写了一个快速启动静态文件服务器的NodeJs包&lt;a href=&quot;https://github.com/LingyuCoder/koa-anywhere&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;koa-anywhere&lt;/a&gt;，可以通过一条命令快速的启动静态文件服务器，而且支持多级目录。目前已经发到了NPM上了&lt;/p&gt;
    
    </summary>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/categories/NodeJs/"/>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
      <category term="ES6" scheme="http://lingyu.life/tags/ES6/"/>
    
      <category term="koa" scheme="http://lingyu.life/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>学前端的一点总结</title>
    <link href="http://lingyu.life/2014/09/22/learn-fe/"/>
    <id>http://lingyu.life/2014/09/22/learn-fe/</id>
    <published>2014-09-21T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.928Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近&lt;a href=&quot;https://github.com/qiu-deqing&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Qiu&lt;/a&gt;开了一个&lt;a href=&quot;https://github.com/qiu-deqing/FE-learning/blob/master/README.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FE学习经验介绍&lt;/a&gt;，并邀请我去写一点东西。感觉这种方式很有意思，趁着闲下来了，就随便扯了一些，希望能帮到想学前端的同学。我自己只是个前端初学者，希望能有更多的前端爱好者一同学习探讨~~&lt;/p&gt;
    
    </summary>
    
    
      <category term="思考总结" scheme="http://lingyu.life/categories/%E6%80%9D%E8%80%83%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="CSS" scheme="http://lingyu.life/tags/CSS/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://lingyu.life/tags/HTML/"/>
    
      <category term="思考" scheme="http://lingyu.life/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>细说Generator</title>
    <link href="http://lingyu.life/2014/07/29/generator/"/>
    <id>http://lingyu.life/2014/07/29/generator/</id>
    <published>2014-07-28T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.447Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;好久没写东西了，今天看了下ES6的Generator的相关知识，在这里记录一下。主要内容翻译自规范，并加入了自己的理解和总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/categories/NodeJs/"/>
    
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="ES6" scheme="http://lingyu.life/tags/ES6/"/>
    
      <category term="Generator" scheme="http://lingyu.life/tags/Generator/"/>
    
  </entry>
  
  <entry>
    <title>如何写一个KISSY动画插件</title>
    <link href="http://lingyu.life/2014/05/31/kissy-anime-plugin/"/>
    <id>http://lingyu.life/2014/05/31/kissy-anime-plugin/</id>
    <published>2014-05-30T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.928Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近写东西写的比较少，并不代表我一直在划水。之前阿里的前辈布置了三个作业，其中一个就是基于KISSY写一个动画插件。事实上，KISSY已经有自己的动画模块，叫做&lt;a href=&quot;http://docs.kissyui.com/1.4/docs/html/api/anim/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;anim&lt;/a&gt;，这里前辈的意思就是让我再造一个轮子，&lt;a href=&quot;http://lingyucoder.github.io/kissy-anime-plugin/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DEMO页面&lt;/a&gt;，&lt;a href=&quot;https://github.com/LingyuCoder/kissy-anime-plugin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github页面&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端综合" scheme="http://lingyu.life/categories/%E5%89%8D%E7%AB%AF%E7%BB%BC%E5%90%88/"/>
    
    
      <category term="CSS" scheme="http://lingyu.life/tags/CSS/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://lingyu.life/tags/HTML/"/>
    
      <category term="动画" scheme="http://lingyu.life/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="Kissy" scheme="http://lingyu.life/tags/Kissy/"/>
    
  </entry>
  
  <entry>
    <title>WebRTC的RTCDataChannel</title>
    <link href="http://lingyu.life/2014/05/22/webrtc-data-channels/"/>
    <id>http://lingyu.life/2014/05/22/webrtc-data-channels/</id>
    <published>2014-05-21T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:29.611Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在两个浏览器中，为聊天、游戏、或是文件传输等需求发送信息是十分复杂的。通常情况下，我们需要建立一台服务器来转发数据，当然规模比较大的情况下，会扩展成多个数据中心。这种情况下很容易出现很高的延迟，同时难以保证数据的私密性。&lt;/p&gt;
&lt;p&gt;这些问题可以通过WebRTC提供的RTCDataChannel API来解决，他能直接在点对点之间传输数据。这篇文章将介绍如何创建并使用数据通道，并提供了一些网络上常见的用例&lt;/p&gt;
    
    </summary>
    
    
      <category term="即时通信" scheme="http://lingyu.life/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="WebSocket" scheme="http://lingyu.life/tags/WebSocket/"/>
    
      <category term="NodeJs" scheme="http://lingyu.life/tags/NodeJs/"/>
    
      <category term="WebIM" scheme="http://lingyu.life/tags/WebIM/"/>
    
      <category term="WebRTC" scheme="http://lingyu.life/tags/WebRTC/"/>
    
      <category term="JavaScript" scheme="http://lingyu.life/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS的渲染阻塞</title>
    <link href="http://lingyu.life/2014/05/21/google-render-blocking-css/"/>
    <id>http://lingyu.life/2014/05/21/google-render-blocking-css/</id>
    <published>2014-05-20T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.447Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;默认情况下，CSS会被看做是渲染阻塞资源，也就是说，浏览器在CSSOM建立前，已经处理过的网页内容不会被显示到页面上。所以，保证你的CSS代码能够快速从服务器获取且尽可能的简短，并注意使用媒体类型（media types）和媒体查询（media queries）去进行非阻塞的渲染。&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="CSS" scheme="http://lingyu.life/tags/CSS/"/>
    
      <category term="HTML" scheme="http://lingyu.life/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>使用导航计时监测渲染关键路径</title>
    <link href="http://lingyu.life/2014/05/21/google-measuring-the-critical-rendering-path-with-navigation-timing/"/>
    <id>http://lingyu.life/2014/05/21/google-measuring-the-critical-rendering-path-with-navigation-timing/</id>
    <published>2014-05-20T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.447Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;没办法监测，就没办法优化。幸运的是，浏览器提供了一系列用来监测渲染关键路径上每一步的接口，叫导航计时接口（Navigation Timing API）&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="CSS" scheme="http://lingyu.life/tags/CSS/"/>
    
      <category term="HTML" scheme="http://lingyu.life/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>通过JavaScript增加交互性</title>
    <link href="http://lingyu.life/2014/05/21/google-adding-interactivity-with-javaScript/"/>
    <id>http://lingyu.life/2014/05/21/google-adding-interactivity-with-javaScript/</id>
    <published>2014-05-20T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.449Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript允许我们网页中的几乎所有的部分：网页内容、样式等等，它还能提供用户交互的行为。然而，JavaScript也会在页面被渲染时阻塞和延迟DOM树的构建。保证JavaScript代码的异步性，删除不必要的JavaScript代码，可以优化性能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="CSS" scheme="http://lingyu.life/tags/CSS/"/>
    
      <category term="HTML" scheme="http://lingyu.life/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>构建对象模型</title>
    <link href="http://lingyu.life/2014/05/20/google-constructing-the-object-model/"/>
    <id>http://lingyu.life/2014/05/20/google-constructing-the-object-model/</id>
    <published>2014-05-19T16:00:00.000Z</published>
    <updated>2020-03-07T15:17:28.447Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;浏览器渲染页面之前会构建DOM树和CSSOM树&lt;/p&gt;
    
    </summary>
    
    
      <category term="翻译" scheme="http://lingyu.life/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="CSS" scheme="http://lingyu.life/tags/CSS/"/>
    
      <category term="HTML" scheme="http://lingyu.life/tags/HTML/"/>
    
  </entry>
  
</feed>
